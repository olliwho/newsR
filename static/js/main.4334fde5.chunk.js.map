{"version":3,"sources":["template/Loading.tsx","article/ArticleAuthor.tsx","template/Constants.ts","template/IconButton.tsx","article/ArticleDetail.tsx","article/CollapsibleThreadListEntry.tsx","article/CollapsibleThreadList.tsx","article/ThreadDetail.tsx","template/SidebarContent.tsx","author/Author.ts","article/Content.ts","group/GroupCache.ts","article/Article.ts","group/Group.ts","server/Server.ts","localStorage/localStorage.ts","template/ListEntry.tsx","template/List.tsx","template/TableEntry.tsx","template/Table.tsx","template/Header.tsx","template/Footer.tsx","group/GroupDetail.tsx","post/Post.tsx","startPage/StartPage.tsx","settings/Settings.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["Loading","className","icon","spin","React","Component","ArticleAuthor","article","this","props","date","format","author","name","queries","small","large","matches","href","email","IconButton","children","query","screenIsSmall","ArticleDetail","state","isContentLoading","contents","attachments","loadContent","prevProps","showContent","setState","text","level","nestContent","quoteString","forEach","content","repeat","citationLevel","quote","nestQuote","signature","localStorage","getItem","encodeURIComponent","onClickHeader","hasSimpleHeader","groupName","onClick","id","subject","createMailBody","e","stopPropagation","to","number","map","index","key","length","attachment","dataUrl","download","includes","contentType","src","alt","defaultProps","CollapsibleThreadListEntry","baseUrl","articles","followUps","CollapsibleThreadList","forceHideIds","articleId","splice","indexOf","push","handleArticleClick","ThreadDetail","match","params","Helmet","SidebarContent","sidebar","content1","content2","Author","nameEmail","nameEmailResult","RegExp","exec","Content","isCitationStart","undefined","citationRegex","find","regexp","test","GroupCache","db","cache","Promise","resolve","reject","openRequest","indexedDB","open","onerror","onsuccess","event","result","onupgradeneeded","upgrade","target","overStore","createObjectStore","keyPath","createIndex","unique","bodyStore","server","group","overArticle","transaction","objectStore","storageObj","headers","articleNumber","JSON","stringify","metadata","add","overviewArticles","persistOverArticle","overArticles","openCursor","IDBKeyRange","only","cursor","value","parse","continue","messageId","body","Article","hasattachment","size","newsieClient","references","directReference","split","instance","groupCache","retrieveBody","host","persistBody","bodyToContents","post","concat","a","moment","DATE","authorFromString","mimeWordsDecode","FROM","fullSize","Number","toFixed","toString","SUBJECT","setReferences","REFERENCES","nextRootIndex","citationIndex","i","isOnlyWhitespace","whitespaceRegex","missingMimeHeader","substring","mimeInfo","join","childNodes","filter","node","TextDecoder","decode","base64","raw","lastIndexOf","replace","line","Group","description","over","overview","persistOverArticles","ArticleFromNewsieArticle","low","high","retrieveOverArticles","articlesByNumber","sort","b","articleIdMap","threads","unix","initialResponse","code","errorMsg","console","error","Error","From","Newsgroups","Subject","packageJson","version","References","send","WsConnection","port","tlsPort","tlsOptions","_socket","_host","_port","_queue","onCloseCallback","connect","async","addEventListener","write","_addSocketHandlers","disconnect","close","h","str","addCallback","callback","onmessage","responseHandler","response","data","shift","err","onclose","WebSocket","process","WsNewsie","options","_wsConnection","socket","sendData","Command","GREETING","command","payload","then","setOnCloseCallback","Newsie","Server","initWsNewsieClient","newsieOptions","isNaN","log","connectAndVerifyNewsieClient","connection","capabilities","LIST","listNewsgroups","newsgroups","ng","prefix","pre","nntpUrl","nntpPortStr","parseInt","keepaliveIntervalReference","getSubscribedGroups","subscribedGroups","getReadArticles","readArticles","ListEntry","entry","history","useHistory","url","onPress","class","bold","title","subtitle","List","TableEntry","columns","row","column","type","referenceObject","nativeName","TableColumn","Table","urlColumn","onPressSort","sortColumn","ascending","header","sortIcon","faChevronUp","faChevronDown","sortColumnNew","newAscending","newSortColumn","onPressSortExec","dataString","Header","searchBar","Logo","Heading","placeholder","onChange","toLowerCase","buttons","button","Button","logo","Footer","GroupDetail","loading","groups","subscribedGroupsName","filteredThreads","activeArticle","getGroupByName","articleListData","setItem","addReadArticle","headerWithSearch","headerWithoutSearch","getGroups","isSubscription","curgroup","isGroupSubscribed","path","render","thread","componentDidMount","NoThread","_Post","sending","done","startsWith","replyStr","parseQuote","delay","res","setTimeout","preventDefault","authorClass","postFollowup","timeout","goBack","headerText","headerSubtitle","acceptCharset","onSubmit","required","currentTarget","readOnly","disabled","Post","withRouter","StartPage","useState","filterText","setLoading","useEffect","fetchData","changeSubscriptionState","g","unsubscribeGroup","subscribeGroup","groupIcon","newButtons","isGroupFiltered","serverUrl","Start","_Settings","setting","groupPrefix","clear","resetServer","setServer","Settings","App","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","library","faChevronRight","faHandPointRight","faHome","faSpinner","faPencilAlt","faCog","faList","faGithub","faCheckSquare","faSquare","faTools","faEnvelope","ReactDOM","basename","document","getElementById","URL","origin","fetch","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.4334fde5.chunk.js","sourcesContent":["import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface Props {\n}\n\ninterface State {\n\n}\n\nexport class Loading extends React.Component<Props, State> {\n\n  render() {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading\">\n          <FontAwesomeIcon icon=\"spinner\" spin />&nbsp;&nbsp;Loading ...\n        </div>\n      </div>\n    );\n  }\n}\n","import {ArticleInterface} from \"./Article\";\nimport React, { Fragment } from \"react\";\nimport Media from \"react-media\";\nimport {LARGE_SCREEN_QUERY, SMALL_SCREEN_QUERY} from \"../template/Constants\";\n\ninterface Props {\n  article: ArticleInterface\n}\n\ninterface State {\n}\n\nexport class ArticleAuthor extends React.Component<Props, State> {\n  render() {\n    const {article} = this.props;\n    return (\n      <div className=\"article-detail-author\">\n        {article.date.format(\"YYYY-MM-DD HH:mm\")} by {article.author.name}\n        <Media queries={{small: SMALL_SCREEN_QUERY, large: LARGE_SCREEN_QUERY}}>\n          {matches => (\n            <Fragment>\n              {matches.small && <br />}\n              {matches.large && <Fragment>&nbsp;</Fragment>}\n            </Fragment>\n          )}\n        </Media>\n        <a href={`mailto:${article.author.email}`}>{article.author.email}</a>\n      </div>\n    );\n  }\n}\n","export const SMALL_SCREEN_QUERY = \"(max-width: 47rem)\";\nexport const LARGE_SCREEN_QUERY = \"(min-width: 47.1rem)\";\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {SMALL_SCREEN_QUERY} from \"./Constants\";\nimport Media from \"react-media\";\n\ninterface Props {\n  icon: IconProp\n}\n\ninterface State {\n}\n\nexport class IconButton extends React.Component<Props, State> {\n\n  render() {\n    const {icon, children} = this.props;\n    return (\n      <Media query={SMALL_SCREEN_QUERY}>\n        {\n          screenIsSmall => screenIsSmall ?\n            < div className=\"icon-button\">\n              <FontAwesomeIcon icon={icon}/>\n            </div> :\n            < div className=\"icon-button\">\n              <FontAwesomeIcon icon={icon}/>&nbsp;&nbsp;{children}\n            </div>\n        }\n      </Media>\n    );\n  }\n}\n","import {ArticleId, ArticleInterface} from \"./Article\";\nimport React, {ReactNode} from \"react\";\nimport {Loading} from \"../template/Loading\";\nimport {Content} from \"./Content\";\nimport {ArticleAuthor} from \"./ArticleAuthor\";\nimport {IconButton} from \"../template/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport {Attachment} from \"./Attachment\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface Props {\n  article: ArticleInterface;\n  showContent: boolean;\n  onClickHeader: ((id: ArticleId) => void) | null;\n  hasSimpleHeader: boolean;\n  baseUrl: string;\n  groupName: string;\n}\n\nconst defaultProps: Partial<Props> = {\n  onClickHeader: null,\n  hasSimpleHeader: false\n};\n\ninterface State {\n  contents: Content[];\n  attachments: Attachment[];\n  isContentLoading: boolean;\n}\n\nexport class ArticleDetail extends React.Component<Props, State> {\n  static defaultProps: Partial<Props>;\n  state: Readonly<State> = {\n    isContentLoading: false,\n    contents: [],\n    attachments: []\n  };\n\n  async componentDidMount() {\n    this.loadContent();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (this.props.article !== prevProps.article || this.props.showContent !== prevProps.showContent) {\n      this.loadContent();\n    }\n  }\n\n  private async loadContent() {\n    if (!this.props.showContent) {\n      return;\n    }\n    this.setState({isContentLoading: true, contents: [], attachments: []});\n    const contents = await this.props.article.contents();\n    this.setState({isContentLoading: false, contents: contents.text, attachments: contents.attachments});\n  }\n\n  private nestContent(level: number, text: string): ReactNode {\n    if (level === 0) {\n      return text;\n    }\n    return <div className=\"nested-content\">{this.nestContent(level - 1, text)}</div>;\n  }\n\n  private nestQuote(contents: Content[], article: ArticleInterface): string {\n    let quoteString = `On ${article.date.format(`YYYY-MM-DD HH:mm`)}, ${article.author.name} wrote:\\n`;\n    contents.forEach(function (content) {\n      quoteString += (`>`.repeat(content.citationLevel+1) + ` ${content.text}\\n`)\n    });\n    return quoteString;\n  }\n\n  private createMailBody(contents: Content[], article: ArticleInterface): string {\n    const quote = this.nestQuote(contents, article);\n    const signature = localStorage.getItem('signature')\n    return encodeURIComponent(signature ? `${quote}\\n\\n-- \\n${signature}` : quote);\n  }\n\n  render() {\n    const {article, showContent, onClickHeader, hasSimpleHeader, groupName} = this.props;\n    const {contents, attachments, isContentLoading} = this.state;\n    return (\n      <div className=\"article-detail\">\n        <div className=\"header\" onClick={() => onClickHeader && onClickHeader(article.id)}>\n          {hasSimpleHeader && <div className=\"article-detail-chevron\">\n            {\n              showContent ? <FontAwesomeIcon icon=\"chevron-down\"/> : <FontAwesomeIcon icon=\"chevron-right\"/>\n            }\n          </div> }\n          {hasSimpleHeader\n            ? <ArticleAuthor article={article}/>\n\n            : <div>\n              <h1 className=\"article-detail-title\">{article.subject}</h1>\n              <ArticleAuthor article={article}/>\n            </div>\n          }\n          <div className=\"article-buttons\">\n            <div className=\"article-button\">\n              <a href={`mailto:${article.author.email}?subject=${encodeURIComponent(article.subject)}&body=${this.createMailBody(contents, article)}`}\n                 className=\"no-link\" onClick={e => e.stopPropagation()}>\n                <IconButton icon=\"envelope\">Reply</IconButton>\n              </a>\n            </div>\n            <div className=\"article-button\">\n              <Link to={`/post/${groupName}/${article.number}`} className=\"no-link\">\n                <IconButton icon=\"hand-point-right\">Follow Up</IconButton>\n              </Link>\n            </div>\n          </div>\n        </div>\n        {isContentLoading && <Loading/>}\n        {showContent && <div className=\"article-detail-content\">\n          {contents.map((content, index) =>\n            <div key={index}>\n              {this.nestContent(content.citationLevel, content.text + \"\\n\")}\n            </div>)}\n          {attachments.length > 0 &&\n          <div>\n              <p>Attachments:</p>\n              <ul className=\"attachments\">\n                {attachments.map((attachment) =>\n                  <li key={attachment.name}>\n                    <a\n                      href={attachment.dataUrl}\n                      download={attachment.name}\n                    >\n                      {['image/png', 'image/gif', 'image/jpeg', 'image/svg+xml'].includes(attachment.contentType) ? (\n                        <img src={attachment.dataUrl}  alt={attachment.name} />\n                      ) : (\n                        <span>{attachment.name}</span>\n                      )\n                      }\n                    </a>\n                  </li>)}\n              </ul>\n          </div>\n          }\n        </div>}\n      </div>\n    );\n  }\n}\n\nArticleDetail.defaultProps = defaultProps;\n","import React from \"react\";\nimport {ArticleId, ArticleInterface} from \"./Article\";\nimport {ArticleDetail} from \"./ArticleDetail\";\nimport {CollapsibleThreadList} from \"./CollapsibleThreadList\";\n\n\ninterface State {\n}\n\ninterface Props {\n  article: ArticleInterface;\n  showContent: boolean;\n  onClick: (id: ArticleId) => void;\n  baseUrl: string;\n  groupName: string;\n}\n\nexport class CollapsibleThreadListEntry extends React.Component<Props, State> {\n  render() {\n    const {showContent, article, onClick, baseUrl, groupName} = this.props;\n    return (\n      <li key={article.id}>\n        <ArticleDetail article={article} baseUrl={baseUrl} groupName={groupName} showContent={showContent} onClickHeader={id => onClick(id)}\n                       hasSimpleHeader={true}/>\n        {showContent && <div>\n          <CollapsibleThreadList articles={article.followUps} baseUrl={baseUrl} groupName={groupName} />\n          <div className=\"collapsible-line\" onClick={() => onClick(article.id)} />\n        </div>}\n      </li>\n    )\n  }\n}\n","import React from \"react\";\nimport {ArticleId, ArticleInterface} from \"./Article\";\nimport {CollapsibleThreadListEntry} from \"./CollapsibleThreadListEntry\";\n\n\ninterface State {\n  forceHideIds: ArticleId[];\n}\n\ninterface Props {\n  articles: ArticleInterface[];\n  baseUrl: string;\n  groupName: string;\n}\n\nexport class CollapsibleThreadList extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    forceHideIds: []\n  };\n\n  handleArticleClick(articleId: ArticleId) {\n    const {forceHideIds} = this.state;\n    if (forceHideIds.includes(articleId)) {\n      forceHideIds.splice(forceHideIds.indexOf(articleId), 1)\n    } else {\n      forceHideIds.push(articleId);\n    }\n    this.setState({forceHideIds: forceHideIds});\n  }\n\n  render() {\n    const {articles, baseUrl, groupName} = this.props;\n    const {forceHideIds} = this.state;\n\n    return (\n      <div className=\"collapsible-thread-list\">\n        <ul>\n          {articles.map(article =>\n            <CollapsibleThreadListEntry baseUrl={baseUrl} groupName={groupName} key={article.id} article={article}\n                                        showContent={!forceHideIds.includes(article.id)}\n                                        onClick={id => this.handleArticleClick(id)}/>)}\n        </ul>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport {Article} from \"./Article\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {Group} from \"../group/Group\";\nimport {Helmet} from \"react-helmet\";\nimport {ArticleDetail} from \"./ArticleDetail\";\nimport {CollapsibleThreadList} from \"./CollapsibleThreadList\";\n\n\ninterface State {\n  content: string\n}\n\ninterface ArticleDetailRouteParams {\n  number: string;\n  name: string;\n}\n\ninterface Props extends RouteComponentProps<ArticleDetailRouteParams> {\n  group: Group;\n  article: Article | null;\n}\n\nexport class ThreadDetail extends React.Component<Props, State> {\n  render() {\n    const {article, match} = this.props;\n    const baseUrl = `/groups/${match.params.name}/`;\n\n    if (article === null) {\n      return \"Article not found!\";\n    }\n\n    return (\n      <div className=\"thread-detail\">\n        <Helmet>\n          <title>newsR - {article?.subject}</title>\n        </Helmet>\n        <ArticleDetail baseUrl={baseUrl} groupName={match.params.name} article={article} showContent={true}/>\n        <CollapsibleThreadList baseUrl={baseUrl} groupName={match.params.name} articles={article?.followUps}/>\n      </div>\n    )\n  }\n}\n","import React, {ReactNode} from \"react\";\n\ninterface Props {\n  sidebar: ReactNode,\n  content1: ReactNode,\n  content2: ReactNode\n}\n\ninterface State {\n}\n\nexport class SidebarContent extends React.Component<Props, State> {\n\n  render() {\n    return (\n    /* ELKE */\n      <div className=\"sidebar-content\">\n        <div className=\"sidebar-content-sidebar\">{this.props.sidebar}</div>\n        <div className=\"sidebar-content-content-1\">{this.props.content1}</div>\n        <div className=\"sidebar-content-content-2\">{this.props.content2}</div>\n      </div>\n\n\n      /*<div className=\"sidebar-content\">\n              <div className=\"sidebar-content-sidebar\">{this.props.sidebar}</div>\n              <div className=\"sidebar-content-content\">{this.props.content}</div>\n            </div>*/\n    );\n  }\n}\n","export interface AuthorInterface {\n  name: string,\n  email: string\n}\n\nexport class Author implements AuthorInterface {\n  public readonly name: string;\n  public readonly email: string;\n\n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n\n  public static authorFromString(nameEmail: string) {\n    const nameEmailRegexp = new RegExp('(.*?) <(.*?)>');\n    const nameEmailResult = nameEmailRegexp.exec(nameEmail);\n    let name: string;\n    let email: string;\n    if (nameEmailResult === null) {\n      name = nameEmail;\n      email = \"placeholder.mail@srvr.at\";\n    } else {\n      name = nameEmailResult[1];\n      email = nameEmailResult[2];\n    }\n    return new Author(name, email);\n  }\n\n  public toString(): string {\n    return `${this.name} <${this.email}>`;\n  }\n}\n","export class Content {\n  public readonly citationLevel: number;\n  public readonly text: string;\n  private static readonly citationRegex: RegExp[] = [\n    new RegExp(/am(.*?)schrieb.*/, \"i\"),\n    new RegExp(/on(.*?)wrote.*/, \"i\")\n  ];\n  constructor(text: string, citationLevel: number) {\n    this.citationLevel = citationLevel;\n    this.text = text;\n  }\n\n  public isCitationStart(): boolean {\n    return this.citationLevel === 0 && Content.isCitationStart(this.text);\n  }\n\n  private static isCitationStart(text: string): boolean {\n    return this.citationRegex.find((regexp: RegExp) => regexp.test(text)) !== undefined;\n  }\n}\n","import {Article} from \"newsie\";\n\nexport class GroupCache {\n\n  private static cache: GroupCache;\n\n  private db: any;\n\n  public static async instance(): Promise<GroupCache> {\n    if (this.cache) {\n      return GroupCache.cache;\n    }\n    return new Promise((resolve, reject) => {\n      const openRequest = indexedDB.open(\"newsR\");\n\n      openRequest.onerror = () => {\n        reject();\n      };\n      openRequest.onsuccess = (event) => {\n        this.cache = new GroupCache(openRequest.result);\n        resolve(this.cache);\n      };\n      openRequest.onupgradeneeded = GroupCache.upgrade;\n    })\n  }\n\n  // todo: event type\n  private static upgrade(event: any) {\n    const db = event.target.result;\n\n    let overStore = db.createObjectStore(\"over\", { keyPath: \"id\" });\n    overStore.createIndex(\"server-group\", [\"server\", \"group\"], {unique:false});\n    overStore.createIndex(\"server\", \"server\", { unique: false });\n    overStore.createIndex(\"group\", \"group\", { unique: false });\n    overStore.createIndex(\"articleNumber\", \"articleNumber\", { unique: false });\n    overStore.createIndex(\"headers\", \"headers\", { unique: false });\n    overStore.createIndex(\"metadata\", \"metadata\", { unique: false });\n\n    let bodyStore = db.createObjectStore(\"body\", { keyPath: \"id\" });\n    bodyStore.createIndex(\"server-id\", [\"server\", \"id\"], {unique:false});\n    bodyStore.createIndex(\"server\", \"server\", { unique: false });\n    bodyStore.createIndex(\"body\", \"articleNumber\", { unique: false });\n  }\n\n  constructor(db: any) {\n    this.db = db;\n  }\n\n  // todo: fix type\n  // todo: only return once finished..\n  public async persistOverArticle(server: string, group: string, overArticle: any) {\n    let transaction = this.db.transaction([\"over\"], \"readwrite\");\n    let objectStore = transaction.objectStore(\"over\");\n    const storageObj = {\n      id: overArticle.headers[\"MESSAGE-ID\"],\n      \"server-group\": [server, group],\n      server: server,\n      group: group,\n      articleNumber: overArticle.articleNumber,\n      headers: JSON.stringify(overArticle.headers),\n      metadata: JSON.stringify(overArticle.metadata)\n    };\n    objectStore.add(storageObj);\n  }\n\n  // todo: fix overview type\n  public async persistOverArticles(server: string, group: string, overviewArticles: Article[]) {\n    overviewArticles.forEach((overArticle: any) => this.persistOverArticle(server, group, overArticle));\n  }\n\n  public async retrieveOverArticles(server: string, group: string): Promise<any[]> {\n    return new Promise((resolve => {\n      let transaction = this.db.transaction('over');\n      let objectStore = transaction.objectStore('over');\n      let index = objectStore.index(\"server-group\");\n      const overArticles: any[] = [];\n\n      index.openCursor(IDBKeyRange.only([server, group])).onsuccess = (event: any) => {\n        let cursor = event.target.result;\n        if(cursor) {\n          const overArticle = {\n            articleNumber: cursor.value.articleNumber,\n            headers: JSON.parse(cursor.value.headers),\n            metadata:  JSON.parse(cursor.value.metadata),\n          };\n          overArticles.push(overArticle);\n          cursor.continue();\n        } else {\n          resolve(overArticles);\n        }\n      };\n    }));\n  }\n\n  // todo: fix type\n  // todo: only return once finished..\n  public async persistBody(server: string, article: any) {\n    let transaction = this.db.transaction([\"body\"], \"readwrite\");\n    let objectStore = transaction.objectStore(\"body\");\n    const storageObj = {\n      id: article.messageId,\n      server: server,\n      body: JSON.stringify(article.body),\n    };\n    objectStore.add(storageObj);\n  }\n\n  public async retrieveBody(server: string, id: string): Promise<Article> {\n    return new Promise((resolve, reject) => {\n      let transaction = this.db.transaction('body');\n      let objectStore = transaction.objectStore('body');\n      let index = objectStore.index(\"server-id\");\n      index.openCursor(IDBKeyRange.only([server, id])).onsuccess = (event: any) => {\n        let cursor = event.target.result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n        const body = {\n          messageId: cursor.value.id,\n          body: JSON.parse(cursor.value.body),\n        };\n        resolve(body);\n      }\n    });\n  }\n}\n","import moment, {Moment} from \"moment\";\nimport Newsie from 'newsie';\nimport parse from \"emailjs-mime-parser\";\nimport {Author} from \"../author/Author\";\nimport {Content} from \"./Content\";\nimport {Group} from \"../group/Group\";\nimport {GroupCache} from \"../group/GroupCache\";\nimport {Attachment} from \"./Attachment\";\nimport {mimeWordsDecode} from \"emailjs-mime-codec\";\nimport {Article as NewsieArticle} from \"newsie\";\n\nexport type ArticleId = string;\n\nexport interface ArticleInterface {\n  id: ArticleId,\n  subject: string,\n  date: Moment,\n  author: Author,\n  followUps: ArticleInterface[],\n  number: number,\n\n  contents(): Promise<{text: Content[], attachments: Attachment[]}>,\n}\n\nexport class Article implements ArticleInterface {\n  private static readonly whitespaceRegex = new RegExp(/^$|\\s+/);\n  public readonly id: ArticleId;\n  public readonly number: number;\n  public readonly subject: string;\n  public readonly date: Moment;\n  public readonly author: Author;\n  public hasattachment: string;\n  public size: string;\n  public references: ArticleId[] = [];\n  public directReference: ArticleId = '';\n  public followUps: ArticleInterface[] = [];\n  private group: Group;\n  private readonly newsieClient: Newsie;\n\n  constructor(id: string, number: number, subject: string, date: Moment, author: Author, hasattachment: string, size: string, group: Group, newsieClient: Newsie) {\n    this.id = id;\n    this.number = number;\n    this.subject = subject;\n    this.date = date;\n    this.author = author;\n    this.hasattachment = hasattachment;\n    this.size = size;\n    this.group = group;\n    this.newsieClient = newsieClient;\n  }\n\n  public static ArticleFromNewsieArticle(a: NewsieArticle, group: Group, newsieClient: Newsie): Article | null {\n    if (!a || !a.headers || !a.articleNumber) {\n      return null;\n    }\n    const date = moment(a.headers.DATE);\n    const author = Author.authorFromString(mimeWordsDecode(a.headers.FROM));\n    var hasattachment = '';\n    var size = '';\n    var fullSize = 0;\n    if (typeof a.metadata !== 'undefined') {\n        fullSize = Number(a.metadata[\":bytes\"]);\n        // We assume that very large entries do have an attachment.\n        if (fullSize > 10000) {\n            hasattachment = '📎';\n        }\n\n        if (fullSize > 1024*1024)\n            size = (fullSize / (1024*1024)).toFixed(2).toString() + \" MB\";\n        else if (fullSize > 1024)\n            size = (fullSize / (1024)).toFixed(2).toString() + \" KB\";\n        else\n            size = fullSize.toString() + \" B\";\n    }\n    \n    const article = new Article(a.headers['MESSAGE-ID'], a.articleNumber, mimeWordsDecode(a.headers.SUBJECT), date,\n      author, hasattachment, size, group, newsieClient);\n    article.setReferences(a.headers.REFERENCES);\n    return article;\n  }\n\n  public static stripStartEndCitationsFromContents(contents: Content[]) {\n    if (contents.length < 1) {\n      return;\n    }\n    const firstContent = contents[0];\n    if (firstContent.isCitationStart()) {\n      let nextRootIndex = 1;\n      while (nextRootIndex < contents.length && (contents[nextRootIndex].citationLevel !== 0 ||\n        contents[nextRootIndex].text.length === 0)) {\n        nextRootIndex++;\n      }\n      contents.splice(0, nextRootIndex);\n    }\n\n    let citationIndex: number | null = null;\n    for (let i = contents.length - 1; i >= 0; i--) {\n      const content = contents[i];\n      if (content.citationLevel === 0 && !Article.isOnlyWhitespace(content.text)) {\n        break;\n      }\n      if (content.isCitationStart()) {\n        citationIndex = i;\n        break;\n      }\n    }\n\n    if (citationIndex !== null) {\n      contents.splice(citationIndex, contents.length - citationIndex)\n    }\n  }\n\n  private static isOnlyWhitespace(text: string): boolean {\n    return Article.whitespaceRegex.test(text);\n  }\n\n  private static bodyToContents(body: string[]): {text: Content[], attachments: Attachment[]} {\n    const contents: Content[] = [];\n    let attachments: Attachment[] = [];\n\n    if (body[0] === 'This is a multi-part message in MIME format.') {\n      const missingMimeHeader =\n        'MIME-Version: 1.0\\n' +\n        `Content-Type: multipart/mixed; boundary=${body[1].substring(2)}\\n` +\n        '\\n';\n      const mimeInfo = parse(missingMimeHeader + body.join('\\n'));\n      body = mimeInfo.childNodes\n        .filter((node: any) => node.contentType.value === 'text/plain')\n        .map((node: any) => new TextDecoder(\"utf-8\").decode(node.content))\n        .join('\\n')\n        .split('\\n');\n      attachments = mimeInfo.childNodes\n        .filter((node: any) => node.contentType.value !== 'text/plain')\n        .map((node: any) => {\n          const base64 = node.raw.substring(node.raw.lastIndexOf('\\n\\n')).replace(/\\s/g, \"\");\n          return {\n            contentType: node.contentType.value,\n            name: node.contentType.params.name,\n            dataUrl: `data:${node.contentType.value};base64,${base64}`\n          };\n        });\n    }\n\n    if (!body) {\n      return {text: contents, attachments};\n    }\n\n    body.forEach((line: string) => {\n      let citationLevel = 0;\n      while (citationLevel < line.length && line[citationLevel] === \">\") {\n        citationLevel++;\n      }\n      line = line.substring(citationLevel, line.length);\n      contents.push(new Content(line, citationLevel));\n    });\n    return {text: contents, attachments};\n  }\n\n  public setReferences(references: string) {\n    if (references.length <= 0) {\n      return;\n    }\n    this.references = references.split(' ');\n    this.directReference = this.references[this.references.length - 1];\n  }\n\n  public async contents(): Promise<{text: Content[], attachments: Attachment[]}> {\n    const groupCache = await GroupCache.instance();\n    let article = await groupCache.retrieveBody(this.group.host, this.id);\n    if (!article || !article.body) {\n      article = (await this.newsieClient.body(this.id)).article;\n      if (article.body) {\n        await groupCache.persistBody(this.group.host, article);\n      } else {\n        article.body = [\n          '[newsR: content not found and not cached]'\n        ]\n      }\n    }\n    const contents = Article.bodyToContents(article.body);\n    // Article.stripStartEndCitationsFromContents(contents.text);\n    return {text: contents.text, attachments: contents.attachments};\n  }\n\n  public async postFollowup(author: Author, subject: string, body: string[]): Promise<void> {\n    await this.group.post(author, subject, body, this.references.concat(this.id));\n  }\n}\n","import Newsie from 'newsie';\nimport {Article as NewsieArticle} from \"newsie\";\nimport {Author} from \"../author/Author\";\nimport {Article, ArticleInterface} from \"../article/Article\";\nimport {GroupCache} from \"./GroupCache\";\nimport packageJson from '../../package.json';\n\nexport interface GroupInterface {\n  readonly name: string;\n  readonly description: string;\n\n  threads(): Promise<ArticleInterface[]>;\n}\n\ninterface ArticleMap {\n  [key: string]: Article;\n}\n\nexport class Group implements GroupInterface {\n  public readonly name: string;\n  public readonly description: string;\n  public readonly host: string;\n  private readonly newsieClient: Newsie;\n\n  constructor(name: string, description: string, host: string, newsieClient: Newsie) {\n    this.name = name;\n    this.description = description;\n    this.newsieClient = newsieClient;\n    this.host = host;\n  }\n\n  public async article(articleNumber: number): Promise<Article|null> {\n    // todo: fix type\n    const overview: any = await this.newsieClient.over(`${articleNumber}-${articleNumber}`);\n    const groupCache = await GroupCache.instance();\n    await groupCache.persistOverArticles(this.host, this.name, overview.articles);\n    const a: NewsieArticle = overview.articles[0];\n    return Article.ArticleFromNewsieArticle(a, this, this.newsieClient);\n  }\n\n  public async threads(): Promise<Article[]> {\n    const group = (await this.newsieClient.group(this.name)).group;\n    if (group.number === 0) {\n      return [];\n    }\n    // todo: fix type\n    const overview: any = await this.newsieClient.over(`${group.low}-${group.high}`);\n    const groupCache = await GroupCache.instance();\n    await groupCache.persistOverArticles(this.host, this.name, overview.articles);\n    const articles = await groupCache.retrieveOverArticles(this.host, this.name);\n    const articlesByNumber: any[] = articles\n      .sort((a: any, b: any) => a.articleNumber - b.articleNumber)\n      .map((a: any) => {\n        return Article.ArticleFromNewsieArticle(a, this, this.newsieClient);\n      });\n    const articleIdMap: ArticleMap = {};\n    const threads: Article[] = [];\n    articlesByNumber.forEach((article) => {\n      articleIdMap[article.id] = article;\n      if (article.references.length === 0) {\n        threads.push(article);\n      } else {\n        if (articleIdMap[article.directReference]) {\n          articleIdMap[article.directReference].followUps.push(article);\n        }\n      }\n    });\n    threads.sort((a: Article, b: Article) => b.date.unix() - a.date.unix());\n    return threads;\n  }\n\n  public async post(author: Author, subject: string, body: string[], references?: string[]): Promise<void> {\n    const initialResponse = await this.newsieClient.post();\n    if (initialResponse.code !== 340) {\n      // todo: display error..\n      const errorMsg = \"Cannot post: Posting not permitted\";\n      console.error(errorMsg);\n      throw new Error(errorMsg);\n    }\n\n    const article: NewsieArticle = {\n      headers: {\n        From: author.toString(),\n        Newsgroups: this.name,\n        Subject: subject,\n        \"User-Agent\": `newsR/${packageJson.version}`\n      },\n      body: body\n    };\n    if (references && article.headers) {\n      article.headers.References = references.join(' ');\n    }\n\n    const postResponse = await initialResponse.send(article);\n    if (postResponse.code !== 240) {\n      // todo: display error..\n      const errorMsg = \"Posting failed: Posting failed\";\n      console.error(errorMsg);\n      throw new Error(errorMsg);\n    }\n  }\n}\n","import Newsie, {Command, Options as NewsieOptions} from 'newsie';\nimport {Group, GroupInterface} from \"../group/Group\";\n\ninterface ResponseHandler {\n  callback: Function\n  resolve: Function\n  reject: Function\n}\n\nclass WsConnection {\n  private readonly _socket: WebSocket;\n  private readonly _host: string;\n  private readonly _port: number;\n  private _queue: ResponseHandler[];\n  private onCloseCallback: any;\n\n  // todo: type tlsOptions: TlsOptions\n  constructor(host: string, port: number, tlsPort: boolean, tlsOptions: any) {\n    // todo: not sure if this should be here or in .connect()\n    if(!process.env.REACT_APP_WS_TO_NNTP_URL) {\n      throw Error(\"WS_TO_NNTP_URL is not defined!\");\n    }\n    this._socket = new WebSocket(process.env.REACT_APP_WS_TO_NNTP_URL);\n    this._host = host;\n    this._port = port;\n    this._queue = [];\n  }\n\n  public connect = async (): Promise<WebSocket> => {\n    return new Promise((resolve) => {\n      this._socket.addEventListener('open', () => {\n        this.write(`NNTPCONNECT ${this._host} ${this._port}`);\n        this._addSocketHandlers();\n        //return this._tlsPort ? this.upgradeTls() : Promise.resolve(this._socket);\n        resolve(this._socket);\n      });\n    });\n  };\n\n  public disconnect = () => {\n    // Close connection\n    this._socket.close();\n    //this._socket.removeAllListeners();\n    //this._socket.unref();\n    //if (this._tlsPromiseReject) {\n    //    this._tlsPromiseReject();\n    //}\n\n    // Empty the queue\n    this._queue.forEach(h => h.reject(new Error('Disconnected from server')));\n    this._queue = [];\n  };\n\n  public write = (str: string): void => {\n    this._socket.send(str);\n  };\n\n  public addCallback = (callback: Function, resolve: Function, reject: Function) => {\n    this._queue.push({callback, resolve, reject})\n  };\n\n  public setOnCloseCallback(callback: any) {\n    this.onCloseCallback = callback;\n  };\n\n  private _addSocketHandlers = (): void => {\n    this._socket.onmessage = (event) => {\n      const responseHandler = this._queue[0];\n      let response = responseHandler.callback(event.data);\n      this._queue.shift();\n      responseHandler.resolve(response);\n    };\n    this._socket.onerror = err => {\n      this._queue.forEach(h => h.reject(err));\n      this.disconnect();\n      throw err;\n    };\n    this._socket.onclose = () => {\n      console.error('WS: Connection closed');\n      this._queue.forEach(h => h.reject(new Error('Connection closed')));\n      //this._socket.removeEventListener()\n      this.onCloseCallback();\n    };\n  };\n\n}\n\nclass WsNewsie extends Newsie {\n  public _wsConnection: WsConnection;\n\n  constructor(options: NewsieOptions) {\n    super(options);\n    const {\n      host,\n      port = 119,\n      tlsPort = false,\n      tlsOptions = {}\n    } = options;\n    this._wsConnection = new WsConnection(host, port, tlsPort, tlsOptions);\n  }\n\n  public setOnCloseCallback(callback: any) {\n    this._wsConnection.setOnCloseCallback(callback);\n  }\n\n  public connect = async (): Promise<any> => {\n    const socket = await this._wsConnection.connect();\n    const response = await this.sendData(Command.GREETING);\n    return {\n      ...response,\n      socket\n    }\n  };\n\n  public disconnect = () => this._wsConnection.disconnect();\n\n  public sendData = (command: Command, payload?: string): Promise<any> =>\n    new Promise((resolve, reject) => {\n      this._wsConnection.addCallback((text: string) => JSON.parse(text), resolve, reject);\n      if (payload) {\n        this._wsConnection.write(payload)\n      }\n    })\n      //.then(this._interceptor)\n      .then((response: any) => (response.code < 400 ? response : Promise.reject(response)))\n}\n\nexport interface ServerInterface {\n  readonly host: string;\n  readonly port: number | undefined;\n\n  getGroupByName(name: string): Promise<GroupInterface | null>;\n\n  groups(): Promise<GroupInterface[]>;\n}\n\nexport class Server implements ServerInterface {\n  private static server: Server | null = null;\n  private static keepaliveIntervalReference: NodeJS.Timeout | null = null;\n  public readonly host: string;\n  public readonly port: number | undefined;\n  private newsieClient: WsNewsie;\n\n  constructor(host: string, port?: number) {\n    this.host = host;\n    if (port) {\n      this.port = port;\n    }\n    this.newsieClient = this.initWsNewsieClient(this.host, this.port);\n  }\n\n  public static async instance(): Promise<Server> {\n    if (this.server === null) {\n      const nntpUrl = localStorage.getItem(\"nntpUrl\");\n      const nntpPortStr = localStorage.getItem(\"nntpPort\");\n      if (!nntpUrl || !nntpPortStr) {\n        throw new Error('Server URl or Server Port not specified.');\n      }\n      this.server = new Server(nntpUrl, parseInt(nntpPortStr));\n      await this.server.connectAndVerifyNewsieClient();\n    }\n    return this.server;\n  }\n\n  private initWsNewsieClient(host: string, port?: number | undefined): WsNewsie {\n    const newsieOptions: NewsieOptions = {\n      host\n    };\n    if (port && !isNaN(port)) {\n      newsieOptions.port = port;\n    }\n    this.newsieClient = new WsNewsie(newsieOptions);\n    this.newsieClient.setOnCloseCallback(() => {\n      console.log('WS: Reconnect!');\n      this.initWsNewsieClient(host, port);\n      this.connectAndVerifyNewsieClient();\n    });\n    return this.newsieClient;\n  }\n\n  private async connectAndVerifyNewsieClient(): Promise<WebSocket> {\n    const connection = await this.newsieClient.connect();\n    if (connection.code !== 200) {\n      throw Error('No connection to server.');\n    }\n    const capabilities = await this.newsieClient.capabilities();\n    if (!capabilities.capabilities.LIST.includes('NEWSGROUPS')) {\n      throw Error('Server does\\'t have the required LIST NEWSGROUPS capability.');\n    }\n    return connection.socket;\n  }\n\n  public async getGroupByName(name: string): Promise<Group | null> {\n    const newsgroups = await this.newsieClient.listNewsgroups(name);\n    if (newsgroups.newsgroups.length !== 1) {\n      return null;\n    }\n    return newsgroups.newsgroups.map((ng) => {\n      const description = typeof ng.description === 'undefined' ? '' : ng.description;\n      return new Group(ng.name, description, this.host, this.newsieClient);\n    })[0];\n  }\n\n  public async groups(): Promise<Group[]> {\n    // todo: remove 'tu-graz*' once https://gitlab.com/timrs2998/newsie/merge_requests/2 is merged\n    const prefix = localStorage.getItem(\"nntpGroupPrefix\");\n    const pre = prefix ? prefix : undefined;\n    const newsgroups = await this.newsieClient.listNewsgroups(pre);\n    return newsgroups.newsgroups.map((ng) => {\n      const description = typeof ng.description === 'undefined' ? '' : ng.description;\n      return new Group(ng.name, description, this.host, this.newsieClient);\n    });\n  }\n\n  public static async resetServer(): Promise<void>{\n    this.server = null;\n    await Server.instance();\n  }\n}\n","export function subscribeGroup(group: string) {\n  const subscribedGroups = getSubscribedGroups();\n\n  if (!!subscribedGroups.find(g => g === group))\n    return;\n\n  localStorage.setItem(\"subscribedGroups\", JSON.stringify(subscribedGroups.concat(group)))\n}\n\nexport function unsubscribeGroup(group: string) {\n  const subscribedGroups = getSubscribedGroups();\n\n  if (!subscribedGroups.find(g => g === group))\n    return;\n\n  localStorage.setItem(\"subscribedGroups\", JSON.stringify(subscribedGroups.filter(g => g !== group)))\n}\n\nexport function getSubscribedGroups(): string[] {\n  const subscribedGroups = localStorage.getItem(\"subscribedGroups\");\n\n  if (!subscribedGroups)\n    return [];\n\n  return JSON.parse(subscribedGroups);\n}\n\nexport function addReadArticle(group: string, article: string) {\n  const readArticles = getReadArticles(group);\n\n  if (!!readArticles.find(a => a === group))\n    return;\n\n  localStorage.setItem(group, JSON.stringify(readArticles.concat(article)))\n}\n\nexport function getReadArticles(group: string): string[] {\n  const readArticles = localStorage.getItem(group);\n\n  if (!readArticles)\n    return [];\n\n  return JSON.parse(readArticles);\n}\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {ListType} from \"./List\";\n\nexport function ListEntry<T extends ListType<T>>(props: {\n  entry: T\n}) {\n  const {entry} = props;\n  const history = useHistory();\n\n  function onPress() {\n    if(entry.replace && entry.url) {\n        history.replace(entry.url);\n    }\n    if(entry.onPress) {\n      entry.onPress(entry);\n    }\n    if(!entry.replace && entry.url) {\n        history.push(entry.url);\n    }\n\n  }\n\n  return (\n\n    <div  onClick={onPress} >\n\n      <div className={\"list-entry \" + entry.class}>\n        {entry.icon &&\n        <div className=\"float\">\n          <FontAwesomeIcon icon={entry.icon}/>\n        </div>\n\n        }\n        <div className=\"list-entry-text\">\n          <span className={\"title\" + (entry.bold ? \" bold\" : \"\")}>{entry.title}</span><br/>\n          <span className={\"subtitle\" + (entry.bold ? \" bold\" : \"\")}>{entry.subtitle}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport {ListEntry} from \"./ListEntry\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nexport type ListType<T> = {\n  title: string\n  url?: string\n  subtitle?: string\n  bold?: boolean\n  class?: string\n  icon?: IconProp\n  onPress?: (entry: T) => void\n  replace?: boolean\n};\n\nexport function List<T extends ListType<T>>(props: {\n  data: T[]\n}) {\n  const {data} = props;\n\n  return (\n    <div>\n      {data.map((entry, index) => <ListEntry key={index} entry={entry}/>)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {TableType, TableColumn} from \"./Table\";\nimport {Author} from \"../author/Author\";\nimport {Moment} from \"moment\";\n\nexport function TableEntry<T extends TableType<T>>(props: {\n  entry: T\n  columns: TableColumn[]\n  urlColumn: string\n}) {\n  const {entry} = props;\n  const {columns} = props;\n  const history = useHistory();\n\n  function onPress() {\n    if(entry.onPress) {\n      entry.onPress(entry);\n    }\n    if(entry.url) {\n        history.push(entry.url);\n    }\n  }\n\n  const row = columns.map((column, i) => {\n            if (entry != null && entry[\"referenceObject\" as keyof TableType<T>] != null)\n            {\n                var value = \"\"\n                if (column.type === 1)\n                    value = (entry.referenceObject[column.nativeName as keyof object] as Author).toString()\n                else if (column.type === 2)\n                    value = (entry.referenceObject[column.nativeName as keyof object] as Moment).format(\"YYYY-MM-DD HH:mm\")\n                else\n                    value = entry.referenceObject[column.nativeName as keyof object]\n                return <td>{value}</td>\n            }\n            else\n                return <td></td>\n        });\n\n  return (\n    <tr onClick={onPress} className={\"table-entry\" + (entry.bold ? \" bold\" : \"\") + (entry.class ? \" \" + entry.class : \"\")}>\n        {row}\n    </tr>\n  )\n}\n\n","import React from \"react\";\nimport {TableEntry} from \"./TableEntry\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {faChevronUp, faChevronDown} from \"@fortawesome/free-solid-svg-icons\";\n\nexport class TableColumn {\n    public readonly name: string\n    public readonly type: number\n    public readonly nativeName: string\n\n    constructor(name: string, type: number, nativeName: string) {\n        this.name = name;\n        this.type = type;\n        this.nativeName = nativeName;\n    }\n}\n\nexport type TableType<T> = {\n  bold?: boolean\n  class?: string\n  url?: string\n  icon?: IconProp\n  onPress?: (entry: T) => void\n  referenceObject: object\n};\n\nexport function Table<T extends TableType<T>>(props: {\n  data: T[]\n  columns: TableColumn[]\n  urlColumn: string,\n  onPressSort: (sortColumn:string, ascending:boolean) => void\n  sortColumn:string\n  ascending:boolean\n}) {\n  const {data} = props;\n  const {columns} = props;\n  const {urlColumn} = props;\n  const {onPressSort} = props;\n  const {sortColumn} = props;\n  const {ascending} = props;\n\n  function onPressSortExec(sortColumnNew:string) {\n    var newAscending:boolean = false;\n    var newSortColumn:string = sortColumn;\n    if (sortColumnNew !== sortColumn)\n    {\n        newAscending = true;\n        newSortColumn = sortColumnNew;\n    }\n    else\n        newAscending = !ascending;\n\n    onPressSort(newSortColumn, newAscending);\n  }\n\n  const header = columns.map((column, i) => {\n        const value = column.name\n        const nativeName = column.nativeName\n        const sortIcon = (column.nativeName === sortColumn) ? (ascending) ? <FontAwesomeIcon icon={faChevronUp} /> : <FontAwesomeIcon icon={faChevronDown} /> : \"\"\n        return <th id={nativeName} onClick={() => onPressSortExec(nativeName)}>{value} {sortIcon}</th>\n    });\n\n    var dataString = null;\n    loadDataString();\n\n    function loadDataString()\n    {\n        if (sortColumn === \"\")\n            dataString = data.map((entry, index) => <TableEntry key={index} entry={entry} columns={columns} urlColumn={urlColumn}/>);\n        else\n            dataString = data.sort((a, b) => a.referenceObject[sortColumn as keyof object] > b.referenceObject[sortColumn as keyof object] ? (ascending ? 1 : -1) : (ascending ? -1 : 1)).map((entry, index) => <TableEntry key={index} entry={entry} columns={columns} urlColumn={urlColumn}/>);\n    }\n\n  return (\n    <table>\n        <thead>\n            <tr>{header}</tr>\n        </thead>\n        {dataString}\n    </table>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from \"../logo.svg\";\nimport {IconButton} from \"./IconButton\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\n\nexport type Button = {\n  name: string\n  icon: IconProp\n  url?: string\n  onPress?(): void\n}\n\nexport function Header(props: {\n  name: string,\n  subtitle?: string,\n  url?: string\n  searchBar?: {\n    filter: (value: string) => void\n  }\n  buttons?: Button[]\n}) {\n  const {searchBar} = props;\n  return (\n    <div className=\"app-grid-header\">\n      <Logo/>\n      <div className=\"search-bar\">\n        <Heading name={props.name} subtitle={props.subtitle} url={props.url}/>\n        {searchBar && searchBar.filter &&\n        <input className=\"search\" type=\"text\" placeholder=\"Search Message Headers…\"\n               onChange={(e) => searchBar.filter(e.target.value.toLowerCase())}/>\n        }\n      </div>\n      {props.buttons && props.buttons.map((button, index) =>\n        <Button key={index} icon={button.icon} name={button.name} url={button.url} onPress={button.onPress}/>\n      )}\n\n    </div>\n  )\n}\n\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <Link className=\"no-link\" to={'/'}>\n        <img src={logo} alt=\"Logo\"/>\n      </Link>\n    </div>\n  )\n}\n\nfunction Heading(props: {\n  url?: string\n  name: string\n  subtitle?:string\n}) {\n\n    if (props.url) {\n      return (\n        <Link className=\"no-link\" to={`${props.url}`}>\n          <h2>{props.name}</h2>\n          {props.subtitle && (<h3 className=\"heading-subtitle\">{props.subtitle}</h3>)}\n        </Link>\n      )\n    }\n\n  return (\n    <h2>{props.name}</h2>\n  )\n}\n\nfunction Button(props: {\n  icon: IconProp,\n  name: string,\n  url?: string\n  onPress?(): void\n}) {\n  const {icon, name, url, onPress} = props\n  if (url) {\n    return (\n      <Link to={url} className=\"no-link\">\n        <div className=\"icon\">\n          <IconButton icon={icon}>{name}</IconButton>\n        </div>\n      </Link>\n    )\n  }\n\n  if (onPress) {\n    return (\n      <div className=\"icon\" onClick={() => onPress()}>\n        <IconButton icon={icon}>{name}</IconButton>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"icon\">\n      <IconButton icon={icon}>{name}</IconButton>\n    </div>\n  )\n}\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport packageJson from '../../package.json';\n\nexport function Footer() {\n  return (\n    <div className=\"app-grid-footer\">\n      <span className=\"app-name\">newsR {packageJson.version}</span>\n      <a href=\"https://github.com/olliwho/newsR\" className=\"no-link github-link\">\n        <FontAwesomeIcon icon={['fab', 'github']} />&nbsp;&nbsp;Github\n      </a>\n    </div>\n  )\n}\n","import React, {Fragment} from \"react\";\nimport {Group} from \"./Group\";\nimport {ThreadDetail} from \"../article/ThreadDetail\";\nimport {SidebarContent} from \"../template/SidebarContent\";\nimport {Server} from \"../server/Server\";\nimport {Link, Redirect, Route, RouteComponentProps, Switch} from \"react-router-dom\"\nimport Media from \"react-media\";\nimport {LARGE_SCREEN_QUERY, SMALL_SCREEN_QUERY} from \"../template/Constants\";\nimport {getSubscribedGroups} from \"../localStorage/localStorage\";\nimport {Loading} from \"../template/Loading\";\nimport {Article} from \"../article/Article\";\nimport {List} from \"../template/List\";\nimport {Table, TableColumn} from \"../template/Table\";\nimport {Helmet} from \"react-helmet\";\nimport {addReadArticle, getReadArticles} from \"../localStorage/localStorage\";\nimport {Button, Header} from \"../template/Header\";\nimport {Footer} from \"../template/Footer\";\nexport type ArticleId = string;\n\ninterface State {\n  loading: boolean;\n  group: Group | null;\n  groups: Group[];\n  subscribedGroupsName: string[];\n  threads: Article[];\n  readArticles: string[];\n  filteredThreads: Article[];\n  activeArticle: ArticleId;\n  sortColumn: string;\n  ascending: boolean;\n}\n\nexport interface GroupRouteParams {\n  name: string;\n}\n\n\n\nexport class GroupDetail extends React.Component<RouteComponentProps<GroupRouteParams>, State> {\n\n  state: Readonly<State> = {\n    loading: true,\n    group: null,\n    groups: [],\n    subscribedGroupsName: [],\n    threads: [],\n    filteredThreads: [],\n    readArticles: [],\n    activeArticle: \"\",\n    sortColumn: \"\",\n    ascending: true\n  };\n\n  async componentDidMount(): Promise<void> {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return;\n    }\n    const server = await Server.instance();\n    const groups = await server.groups();\n    const subscribedGroupsName = getSubscribedGroups();\n    const group = await server.getGroupByName(this.props.match.params.name);\n    if (group === null) {\n      this.setState({\n        loading: false,\n        group: null,\n        groups,\n        subscribedGroupsName,\n      });\n      return;\n    }\n    const threads = await group.threads();\n    const readArticles = getReadArticles(group.name);\n\n    this.setState({loading: false, group, groups, subscribedGroupsName, threads, readArticles, filteredThreads: threads});\n  }\n\n  render() {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return <Redirect to={\"/settings\"}/>;\n    }\n\n    const {match} = this.props;\n    const {group, loading, threads, filteredThreads} = this.state;\n\n    const filter = (text: string) => {\n      const filteredThreads = threads.filter(\n        (article) => article.subject.toLowerCase().includes(text) || article.author.name.toLowerCase().includes(text)\n      );\n      this.setState({filteredThreads})\n    };\n\n    const articleListData = group === null\n      ? []\n      : filteredThreads.map(article => ({\n        bold: !this.state.readArticles.find(a => a === article.id),\n        class: this.state.activeArticle === article.id ? \"active-article\" : \"\",\n        url: `${match.url}/${article.number}`,\n        onPress: () => {\n          addReadArticle(group.name, article.id);\n          this.setState({readArticles: this.state.readArticles.concat(article.id), activeArticle: article.id})\n        },\n        referenceObject: article\n      }));\n\n    const buttons: Button[] = [\n      {\n        name: \"Write\",\n        icon: \"pencil-alt\",\n        url: group === null ? \"\" : `/post/${group.name}`\n      }\n    ];\n\n\n    const groupName = group === null ? match.params.name : group.name;\n    const headerWithSearch = <Header name={groupName} searchBar={{filter}} url={match.url} buttons={buttons}/>;\n    const headerWithoutSearch = <Header name={groupName} url={match.url} buttons={buttons}/>;\n\n    const isGroupSubscribed = (groupName: string) => {\n        return this.state.subscribedGroupsName.includes(groupName);\n    };\n\n    const getGroups = (isSubscription?: boolean): Group[] => {\n        return this.state.groups.filter(curgroup => isGroupSubscribed(curgroup.name));\n    };\n\n    return (\n      <div className=\"app-grid\">\n        <Helmet>\n          <title>newsR - {groupName}</title>\n        </Helmet>\n        <Switch>\n          <Route path={`${match.path}/:number`}>\n            <Media queries={{small: SMALL_SCREEN_QUERY, large: LARGE_SCREEN_QUERY}}>\n              {matches => (\n                <Fragment>\n                  {matches.small && headerWithoutSearch}\n                  {matches.large && headerWithSearch}\n                </Fragment>\n              )}\n            </Media>\n          </Route>\n          <Route path={`${match.path}`}>\n            {headerWithSearch}\n          </Route>\n        </Switch>\n        <div className=\"app-grid-body\">\n          {\n            loading\n              ? <Loading/>\n              : (group === null ? \"Group not found!\" :\n              <Media query={SMALL_SCREEN_QUERY}>\n                {\n                  screenIsSmall => screenIsSmall\n                    ?\n                    <Switch>\n                      <Route path={`${match.path}/:number`} render={props =>\n                        <ThreadDetail {...props} group={group}\n                                      article={threads.find(thread => thread.number === parseInt(props.match.params.number))\n                                      || null}/>\n                      }/>\n                      <Route path={`${match.path}`}>\n                        <Table onPressSort={(sortColumn, ascending) => this.setState({sortColumn: sortColumn, ascending: ascending})} sortColumn={this.state.sortColumn} ascending={this.state.ascending} data={articleListData} columns={[new TableColumn(\"📎\", 0, \"hasattachment\"), new TableColumn(\"Subject\", 0, \"subject\"), new TableColumn(\"Author\", 1, \"author\"), new TableColumn(\"Date\", 2, \"date\"), new TableColumn(\"Size\", 0, \"size\")]} urlColumn=\"url\"/>\n\n                      </Route>\n                    </Switch>\n                    :\n                    <SidebarContent\n                      sidebar={this.state.subscribedGroupsName.length === 0\n                                                 ? <div className=\"no-thread\">\n                                                   <div className=\"no-thread-text\">\n                                                     Welcome to newsR - <Link to={`/groups-manage`}>Subscribe to a newsgroup</Link> to get started!\n                                                   </div>\n                                                 </div>\n                                                 : <List data={getGroups(true).map((curgroup) => ({\n                                                   title: curgroup.name,\n                                                   subtitle: curgroup.description,\n                                                   url: `/groups/${curgroup.name}`,\n                                                   bold: group.name === curgroup.name,\n                                                   class: group.name === curgroup.name ? \"active-group\" : \"\",\n                                                    onPress: () => {\n                                                          this.componentDidMount();\n                                                    }\n                                                 }))}/>}\n\n                      content1={<Table onPressSort={(sortColumn, ascending) => this.setState({sortColumn: sortColumn, ascending: ascending})} sortColumn={this.state.sortColumn} ascending={this.state.ascending} data={articleListData} columns={[new TableColumn(\"📎\", 0, \"hasattachment\"), new TableColumn(\"Subject\", 0, \"subject\"), new TableColumn(\"Author\", 1, \"author\"), new TableColumn(\"Date\", 2, \"date\"), new TableColumn(\"Size\", 0, \"size\")]} urlColumn=\"url\"/>}\n\n                      content2={\n                        <Switch>\n                          <Route path={`${match.path}/:number`} render={props =>\n                            <ThreadDetail {...props} group={group}\n                                          article={threads.find(thread => thread.number === parseInt(props.match.params.number))\n                                          || null}/>\n                          }/>\n                          <NoThread url={match.path} groupName={group.name}/>\n                        </Switch>\n                      }/>\n                    }\n              </Media>)\n          }\n        </div>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nfunction NoThread(props: {\n  url: string\n  groupName: string\n}) {\n  return (\n    <Route path={props.url}>\n      <div className=\"no-thread\">\n        <div className=\"no-thread-text\">\n          {\"Welcome to \" + props.groupName}\n        </div>\n        <div className=\"no-thread-text\">\n          Please select a thread or <Link to={`/post/${props.groupName}`}>write</Link> a new post!\n        </div>\n      </div>\n    </Route>\n  )\n}\n\n","import React, {ChangeEvent, FormEvent} from \"react\";\nimport {Server} from \"../server/Server\";\nimport {Author} from \"../author/Author\";\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {Group} from \"../group/Group\";\nimport {Article, ArticleInterface} from \"../article/Article\";\nimport {Loading} from \"../template/Loading\";\nimport {Helmet} from \"react-helmet\";\nimport {Header} from \"../template/Header\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Content} from \"../article/Content\";\n\ninterface State {\n  loading: boolean;\n  sending: boolean;\n  done: boolean;\n  group: Group | null;\n  article: Article | null;\n  author: string;\n  subject: string;\n  content: string;\n  email: string;\n}\n\nexport interface PostRouteParams {\n  name: string;\n  number: string;\n}\n\nclass _Post extends React.Component<RouteComponentProps<PostRouteParams>, {}> {\n\n  public static replyStr = 'Re: ';\n\n  state: Readonly<State> = {\n    loading: true,\n    sending: false,\n    done: false,\n    group: null,\n    article: null,\n    author: '',\n    subject: '',\n    content: '',\n    email: ''\n  };\n\n  async componentDidMount(): Promise<void> {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return;\n    }\n\n    const {match} = this.props;\n    const server = await Server.instance();\n    const group = await server.getGroupByName(match.params.name);\n    this.setState({\n      author: localStorage.getItem('authorName') || \"\",\n      email: localStorage.getItem('authorEmail') || \"\"\n    });\n    if (!group) {\n      this.setState({\n        group: null,\n        article: null,\n        loading: false\n      });\n      return;\n    }\n\n    const signature = localStorage.getItem(\"signature\");\n    let content = signature ? `\\n\\n-- \\n${signature}` : \"\";\n\n    if (!match.params.number) {\n      this.setState({\n        group,\n        content,\n        article: null,\n        loading: false\n      });\n      return;\n    }\n    console.log('hered1')\n    const article = await group.article(parseInt(match.params.number));\n    if (!article) {\n      this.setState({\n        group: null,\n        article: null,\n        loading: false\n      });\n      return;\n    }\n    const subject = article.subject.startsWith(_Post.replyStr) ? article.subject : _Post.replyStr + article.subject;\n\n    const contents = await article.contents();\n    const quote = this.parseQuote(contents.text, article);\n\n    content = signature ? `${quote}\\n\\n-- \\n${signature}` : quote;\n\n    this.setState({\n      group,\n      article,\n      subject,\n      content,\n      loading: false\n    });\n  }\n\n  private parseQuote(contents: Content[], article: ArticleInterface): string {\n    let quoteString = `On ${article.date.format(\"YYYY-MM-DD HH:mm\")}, ${article.author.name} wrote:\\n`;\n    contents.forEach(function (content) {\n      quoteString += (\">\".repeat(content.citationLevel+1) + \" \" + content.text + \"\\n\")\n    });\n    return quoteString;\n  }\n\n  async timeout(delay: number) {\n    return new Promise( res => setTimeout(res, delay) );\n  }\n\n  async send(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    this.setState({\n      sending: true\n    });\n    const {group, article, subject, author, email, content} = this.state;\n    if (!group) {\n      console.error('Error: cannot send, group not found.');\n      return;\n    }\n    const authorClass = new Author(author, email);\n\n    // removed updating since it is now obligatory to set a name and email in the settings\n    // localStorage.setItem('authorName', author);\n    // localStorage.setItem('authorEmail', email);\n    if (article) {\n      await article.postFollowup(authorClass, subject, [content]);\n    } else {\n      await group?.post(authorClass, subject, [content]);\n    }\n    this.setState({\n      sending: false,\n      done: true\n    });\n    await this.timeout(1000)\n    this.props.history.goBack();\n  }\n\n  render() {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return <Redirect to={\"/settings\"}/>;\n    }\n    const {match} = this.props;\n    const {group, article, loading, subject, author, email, content, sending, done} = this.state;\n\n    let headerText = group === null ? match.params.name : group.name;\n    let headerSubtitle = \"\";\n    if (article) {\n      headerText += ` ${_Post.replyStr + article.subject}`;\n      headerSubtitle = article.date.format(\"YYYY-MM-DD HH:mm\") + \" by \" + article.author.name;\n    }\n    // todo: form validation, author\n    // todo: fix reload bug\n    return (\n      <div className=\"app-grid\">\n        <Helmet>\n          <title>newsR - {headerText}</title>\n        </Helmet>\n        <Header name={headerText} subtitle={headerSubtitle} url={match.url}/>\n        <div className=\"app-grid-body\">\n          {\n            loading ? <Loading/> : (group === null ? \"Group not found\" :\n              <form className=\"post-article\" acceptCharset=\"UTF-8\" onSubmit={(event: FormEvent<HTMLFormElement>) => this.send(event)}>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"author\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={author}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        author: event.currentTarget.value\n                      })\n                    }}\n                  />\n                  <input\n                    required\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"email@provider.tld\"\n                    value={email}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        email: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"subject\"\n                    type=\"text\"\n                    placeholder=\"Subject: …\"\n                    value={subject}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        subject: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                {article && (\n                  <div className=\"input-group\">\n                    <input\n                      name=\"followup to\"\n                      type=\"hidden\"\n                      value={article?.references.concat(article.id).join(' ')}\n                      readOnly\n                    />\n                  </div>\n                )}\n                <div className=\"input-group\">\n                  <textarea\n                    required\n                    value={content}\n                    onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\n                      this.setState({\n                        content: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <button className=\"submit\" type=\"submit\" disabled={sending || done}>\n                    {\n                      sending ? <FontAwesomeIcon icon=\"spinner\" spin />\n                      : (done ? \"Sent!\" : \"Send\")\n                    }\n                  </button>\n                  <button className=\"back\" type=\"reset\" onClick={() => this.props.history.goBack()}>Go back</button>\n                </div>\n              </form>)\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Post = withRouter(_Post);\n","import React, {useEffect, useState} from \"react\";\nimport {Server} from \"../server/Server\";\nimport {List} from \"../template/List\";\nimport {Loading} from \"../template/Loading\";\nimport {Group} from \"../group/Group\";\nimport {Helmet} from \"react-helmet\"\nimport {Button, Header} from \"../template/Header\";\nimport {Footer} from \"../template/Footer\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {getSubscribedGroups, subscribeGroup, unsubscribeGroup} from \"../localStorage/localStorage\";\nimport {Link, Route, Switch, Redirect} from \"react-router-dom\";\n\ninterface StartPageState {\n  groups: Group[],\n  filterText: string,\n  subscribedGroupsName: string[]\n}\n\nexport function StartPage() {\n  const nntpUrl = localStorage.getItem(\"nntpUrl\");\n  const nntpPortStr = localStorage.getItem(\"nntpPort\");\n  if (!nntpUrl || !nntpPortStr) {\n    return <Redirect to={\"/settings\"}/>;\n  }\n  else{\n    return Start();\n  }\n}\n\nfunction Start() {\n  const [state, setState] = useState<StartPageState>({\n    groups: [],\n    filterText: \"\",\n    subscribedGroupsName: []\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      const server = await Server.instance();\n      const groups = await server.groups();\n      const subscribedGroupsName = getSubscribedGroups();\n      setState({\n        ...state,\n        groups,\n        subscribedGroupsName\n      });\n\n      setLoading(false)\n    }\n\n    fetchData();\n  },\n    // doesn't work with [state]? \n    // eslint-disable-next-line\n    []);\n\n  const filter = (filterText: string) => {\n    setState({...state, filterText})\n  };\n\n  const changeSubscriptionState = (group: { title: string }) => {\n    if (isGroupSubscribed(group.title)) {\n      unsubscribeGroup(group.title);\n    } else {\n      subscribeGroup(group.title);\n    }\n    const subscribedGroupsName = getSubscribedGroups();\n    setState({...state, subscribedGroupsName})\n  };\n\n  const groupIcon = (group: Group): IconProp => {\n    if (isGroupSubscribed(group.name))\n      return \"check-square\" as IconProp;\n\n    return \"square\" as IconProp\n  };\n\n  const serverButton: Button = {\n    name: \"Settings\",\n    icon: \"tools\",\n    url: \"/settings\"\n  };\n\n  const manageButton: Button = {\n    name: \"Manage groups\",\n    icon: \"cog\",\n    url: \"/groups-manage\"\n  };\n\n  const subscriptionButton: Button = {\n    name: \"Subscriptions\",\n    icon: \"home\",\n    url: \"/\"\n  };\n\n  const newButtons: Button[] = [serverButton, manageButton, subscriptionButton];\n\n  const isGroupFiltered = (group: Group) => {\n    const {filterText} = state;\n    if (filterText === \"\") {\n      return true;\n    }\n    return (group.name.toLowerCase().includes(filterText) || group.description.toLowerCase().includes(filterText));\n  };\n\n  const isGroupSubscribed = (groupName: string) => {\n    return state.subscribedGroupsName.includes(groupName);\n  };\n\n  const getGroups = (isSubscription?: boolean): Group[] => {\n    return state.groups.filter(group => isGroupFiltered(group) && (isSubscription !== true || isGroupSubscribed(group.name)));\n  };\n\n  const serverUrl = localStorage.getItem(\"nntpUrl\");\n  const nntpUrl = serverUrl !== null ? serverUrl : '';\n\n  return (\n    <div className=\"app-grid\">\n      <Helmet>\n        <title>newsR - {nntpUrl}</title>\n      </Helmet>\n      <Header name={nntpUrl} searchBar={{filter}} buttons={newButtons}/>\n      <div className=\"app-grid-body\">\n        {\n          loading ? <Loading/> :\n            <Switch>\n              <Route path=\"/settings\">\n              </Route>\n              <Route path=\"/groups\">\n                <List data={getGroups().map((group) => ({\n                  title: group.name,\n                  subtitle: group.description,\n                  url: `/groups/${group.name}`\n                }))}/>\n              </Route>\n              <Route path=\"/groups-manage\">\n                <List data={getGroups().map((group) => ({\n                  title: group.name,\n                  subtitle: group.description,\n                  url: \"\",\n                  onPress: changeSubscriptionState,\n                  icon: groupIcon(group)\n                }))}/>\n              </Route>\n              <Route path=\"/\">\n                {state.subscribedGroupsName.length === 0\n                  ? <div className=\"no-thread\">\n                    <div className=\"no-thread-text\">\n                      Welcome to newsR - <Link to={`/groups-manage`}>Subscribe to a newsgroup</Link> to get started!\n                    </div>\n                  </div>\n                  : <List data={getGroups(true).map((group) => ({\n                    title: group.name,\n                    subtitle: group.description,\n                    url: `/groups/${group.name}`\n                  }))}/>}\n              </Route>\n            </Switch>\n        }\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\n\n\n\n","import React, {ChangeEvent, FormEvent} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {Loading} from \"../template/Loading\";\nimport {Helmet} from \"react-helmet\";\nimport {Header} from \"../template/Header\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Footer} from \"../template/Footer\";\nimport {Server} from \"../server/Server\";\n\ninterface SettingsState {\n  loading: boolean;\n  setting: boolean;\n  done: boolean;\n  url: string,\n  port: string,\n  groupPrefix: string,\n  author: string,\n  email: string,\n  signature: string\n}\n\n//TODO: validate input\n\nclass _Settings extends React.Component<RouteComponentProps, {}> {\n\n  state: Readonly<SettingsState> = {\n    loading: true,\n    setting: false,\n    done: false,\n    author: \"\",\n    email: \"\",\n    url: \"\",\n    port: \"\",\n    groupPrefix: \"\",\n    signature: \"\"\n  };\n\n  async componentDidMount(): Promise<void> {\n\n    this.setState({\n      author: localStorage.getItem('authorName') || \"\",\n      email: localStorage.getItem('authorEmail') || \"\",\n      url: localStorage.getItem('nntpUrl') || \"news.tugraz.at\",\n      port: localStorage.getItem('nntpPort') || \"119\",\n      groupPrefix: localStorage.getItem('nntpGroupPrefix') || \"tu-graz*\",\n      signature: localStorage.getItem('signature') || '',\n      loading: false\n    });\n  }\n\n  async setServer(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    this.setState({\n      setting: true\n    });\n    const {author, email, url, port, groupPrefix, signature} = this.state;\n    if (!url || !port || !groupPrefix) {\n      console.error('Error: cannot set, please fill all fields.');\n      return;\n    }\n    if(url !== localStorage.getItem('nntpUrl')){\n      localStorage.clear();\n    }\n    localStorage.setItem('authorName', author);\n    localStorage.setItem('authorEmail', email);\n    localStorage.setItem('nntpUrl', url);\n    localStorage.setItem('nntpPort', port);\n    localStorage.setItem('nntpGroupPrefix', groupPrefix);\n    localStorage.setItem('signature', signature);\n    await Server.resetServer();\n\n    this.setState({\n      setting: false,\n      done: true\n    });\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    const {loading, setting, done, author, email, url, port, groupPrefix, signature} = this.state;\n    return (\n      <div className=\"app-grid\">\n        <Helmet>\n          <title>newsR - Settings</title>\n        </Helmet>\n        <Header name={\"Settings\"}/>\n        <div className=\"app-grid-body\">\n          {\n            loading ? <Loading/> :\n              <form className=\"post-article\" onSubmit={(event: FormEvent<HTMLFormElement>) => this.setServer(event)}>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"name\"\n                    type=\"text\"\n                    title=\"Your Name\"\n                    placeholder=\"Full Name\"\n                    value={author}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        author: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"url\"\n                    type=\"email\"\n                    title=\"Email Address\"\n                    placeholder=\"Email Address\"\n                    value={email}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        email: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"url\"\n                    type=\"text\"\n                    title=\"Server URL like news.tugraz.at\"\n                    placeholder=\"Server URL like news.tugraz.at\"\n                    value={url}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        url: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"port\"\n                    type=\"text\"\n                    title=\"Server Port like 119\"\n                    placeholder=\"Server Port like 119\"\n                    value={port}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        port: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"prefix\"\n                    type=\"text\"\n                    title=\"Group Prefix like tu-graz*\"\n                    placeholder=\"Group Prefix like tu-graz*\"\n                    value={groupPrefix}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        groupPrefix: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <textarea\n                    name=\"signature\"\n                    title=\"Signature\"\n                    placeholder=\"Your Signature...\"\n                    value={signature}\n                    onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\n                      this.setState({\n                        signature: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <button className=\"submit\" type=\"submit\" disabled={setting}>\n                    {\n                      setting ? <FontAwesomeIcon icon=\"spinner\" spin />\n                        : (done ? \"Set!\" : \"Set\")\n                    }\n                  </button>\n                </div>\n              </form>\n          }\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport const Settings = withRouter(_Settings);","import React, {ReactNode} from 'react';\nimport './App.scss';\nimport {GroupDetail} from \"./group/GroupDetail\";\nimport {Route, Switch} from \"react-router-dom\"\nimport {Post} from \"./post/Post\";\nimport {StartPage} from \"./startPage/StartPage\";\nimport {Settings} from \"./settings/Settings\";\n\n\nexport default class App extends React.Component {\n  render(): ReactNode {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/groups/:name\" component={GroupDetail}/>\n          <Route path=\"/post/:name/:number?\" component={Post}/>\n          <Route path=\"/settings\" component={Settings}/>\n          <Route path=\"/\" component={StartPage}/>\n        </Switch>\n      </div>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    // websocke interception not possible with serviceWorker: https://stackoverflow.com/a/39602235/2306363\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {\n  faChevronDown,\n  faChevronRight,\n  faCog,\n  faHandPointRight,\n  faHome,\n  faList,\n  faPencilAlt,\n  faSpinner,\n  faCheckSquare,\n  faSquare,\n  faTools,\n  faEnvelope\n} from '@fortawesome/free-solid-svg-icons'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(faChevronDown, faChevronRight, faHandPointRight, faHome, faSpinner, faPencilAlt, faCog, faList,\n    faGithub, faCheckSquare, faSquare, faTools, faEnvelope);\nReactDOM.render(\n  <HashRouter basename={process.env.REACT_APP_BASE_URL}>\n    <App/>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8e7cbbb2.svg\";"],"sourceRoot":""}