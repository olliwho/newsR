{"version":3,"sources":["author/Author.ts","article/Content.ts","group/GroupCache.ts","article/Article.ts","template/Loading.tsx","article/ArticleAuthor.tsx","template/Constants.ts","template/IconButton.tsx","article/ArticleDetail.tsx","article/CollapsibleThreadListEntry.tsx","article/CollapsibleThreadList.tsx","article/ThreadDetail.tsx","template/SidebarContent.tsx","group/Group.ts","server/Server.ts","localStorage/localStorage.ts","template/ListEntry.tsx","template/List.tsx","template/TableEntry.tsx","template/Table.tsx","template/Header.tsx","template/Footer.tsx","group/GroupDetail.tsx","post/Post.tsx","startPage/StartPage.tsx","settings/Settings.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["Author","name","email","this","nameEmail","nameEmailResult","RegExp","exec","Content","text","citationLevel","isCitationStart","undefined","citationRegex","find","regexp","test","GroupCache","db","cache","Promise","resolve","reject","openRequest","indexedDB","open","onerror","onsuccess","event","result","onupgradeneeded","upgrade","target","overStore","createObjectStore","keyPath","createIndex","unique","bodyStore","server","group","overArticle","transaction","objectStore","storageObj","id","headers","articleNumber","JSON","stringify","metadata","add","overviewArticles","forEach","persistOverArticle","index","overArticles","openCursor","IDBKeyRange","only","cursor","value","parse","push","continue","article","messageId","body","Article","number","subject","date","author","hasattachment","size","newsieClient","references","directReference","followUps","length","split","instance","groupCache","retrieveBody","host","persistBody","contents","bodyToContents","attachments","post","concat","a","moment","DATE","authorFromString","mimeWordsDecode","FROM","fullSize","Number","toFixed","toString","SUBJECT","setReferences","REFERENCES","nextRootIndex","splice","citationIndex","i","content","isOnlyWhitespace","whitespaceRegex","missingMimeHeader","substring","mimeInfo","join","childNodes","filter","node","contentType","map","TextDecoder","decode","base64","raw","lastIndexOf","replace","params","dataUrl","line","quoteString","format","repeat","Loading","className","icon","spin","React","Component","ArticleAuthor","props","queries","small","large","matches","href","IconButton","children","query","screenIsSmall","ArticleDetail","state","isContentLoading","loadContent","prevProps","showContent","setState","level","nestContent","onClickHeader","hasSimpleHeader","groupName","onClick","encodeURIComponent","createMailBody","e","stopPropagation","to","key","attachment","download","includes","src","alt","quote","parseQuote","signature","localStorage","getItem","defaultProps","CollapsibleThreadListEntry","baseUrl","articles","CollapsibleThreadList","forceHideIds","articleId","indexOf","handleArticleClick","ThreadDetail","match","Helmet","SidebarContent","sidebar","content1","content2","Group","description","over","overview","persistOverArticles","ArticleFromNewsieArticle","low","high","retrieveOverArticles","articlesByNumber","sort","b","articleIdMap","threads","unix","initialResponse","code","errorMsg","console","error","Error","From","Newsgroups","Subject","packageJson","version","References","send","WsConnection","port","tlsPort","tlsOptions","_socket","_host","_port","_queue","onCloseCallback","connect","async","addEventListener","write","_addSocketHandlers","disconnect","close","h","str","addCallback","callback","onmessage","responseHandler","response","data","shift","err","onclose","WebSocket","process","WsNewsie","options","_wsConnection","socket","sendData","Command","GREETING","command","payload","then","setOnCloseCallback","Newsie","Server","initWsNewsieClient","newsieOptions","isNaN","log","connectAndVerifyNewsieClient","connection","capabilities","LIST","listNewsgroups","newsgroups","ng","prefix","pre","nntpUrl","nntpPortStr","parseInt","keepaliveIntervalReference","getSubscribedGroups","subscribedGroups","addReadArticle","readArticles","getReadArticles","setItem","ListEntry","entry","history","useHistory","url","onPress","class","bold","title","subtitle","List","TableEntry","columns","row","column","item","type","referenceObject","nativeName","TableColumn","Table","urlColumn","onPressSort","sortColumn","ascending","header","sortIcon","faChevronUp","faChevronDown","faSort","newSortColumn","sortOrder","oldAscending","oldSortColumn","onPressSortExec","dataString","Header","searchBar","Logo","Heading","placeholder","onChange","toLowerCase","buttons","button","Button","logo","Footer","GroupDetail","loading","groups","subscribedGroupsName","filteredThreads","activeArticle","getGroupByName","articleTableData","articleListData","buttons1","buttons2","headerWithSearch","headerWithoutSearch","getGroups","isSubscription","curgroup","isGroupSubscribed","path","render","thread","componentDidMount","NoThread","_Post","sending","done","startsWith","replyStr","delay","res","setTimeout","preventDefault","authorClass","postFollowup","timeout","goBack","headerText","headerSubtitle","acceptCharset","onSubmit","required","currentTarget","readOnly","disabled","Post","withRouter","StartPage","useState","filterText","setLoading","useEffect","fetchData","changeSubscriptionState","g","unsubscribeGroup","subscribeGroup","groupIcon","newButtons","isGroupFiltered","serverUrl","Start","_Settings","setting","groupPrefix","clear","resetServer","setServer","htmlFor","Settings","App","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","library","faChevronRight","faHandPointRight","faHome","faSpinner","faPencilAlt","faArrowLeft","faCog","faList","faGithub","faCheckSquare","faSquare","faTools","faEnvelope","ReactDOM","basename","document","getElementById","URL","origin","fetch","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.74d8c4a5.chunk.js","sourcesContent":["export interface AuthorInterface {\n  name: string,\n  email: string\n}\n\nexport class Author implements AuthorInterface {\n  public readonly name: string;\n  public readonly email: string;\n\n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n\n  public static authorFromString(nameEmail: string) {\n    const nameEmailRegexp = new RegExp('(.*?) <(.*?)>');\n    const nameEmailResult = nameEmailRegexp.exec(nameEmail);\n    let name: string;\n    let email: string;\n    if (nameEmailResult === null) {\n      name = nameEmail;\n      email = \"placeholder.mail@srvr.at\";\n    } else {\n      name = nameEmailResult[1];\n      email = nameEmailResult[2];\n    }\n    return new Author(name, email);\n  }\n\n  public toString(): string {\n    return `${this.name} <${this.email}>`;\n  }\n}\n","export class Content {\n  public readonly citationLevel: number;\n  public readonly text: string;\n  private static readonly citationRegex: RegExp[] = [\n    new RegExp(/am(.*?)schrieb.*/, \"i\"),\n    new RegExp(/on(.*?)wrote.*/, \"i\")\n  ];\n  constructor(text: string, citationLevel: number) {\n    this.citationLevel = citationLevel;\n    this.text = text;\n  }\n\n  public isCitationStart(): boolean {\n    return this.citationLevel === 0 && Content.isCitationStart(this.text);\n  }\n\n  private static isCitationStart(text: string): boolean {\n    return this.citationRegex.find((regexp: RegExp) => regexp.test(text)) !== undefined;\n  }\n}\n","import {Article} from \"newsie\";\n\nexport class GroupCache {\n\n  private static cache: GroupCache;\n\n  private db: any;\n\n  public static async instance(): Promise<GroupCache> {\n    if (this.cache) {\n      return GroupCache.cache;\n    }\n    return new Promise((resolve, reject) => {\n      const openRequest = indexedDB.open(\"newsR\");\n\n      openRequest.onerror = () => {\n        reject();\n      };\n      openRequest.onsuccess = (event) => {\n        this.cache = new GroupCache(openRequest.result);\n        resolve(this.cache);\n      };\n      openRequest.onupgradeneeded = GroupCache.upgrade;\n    })\n  }\n\n  // todo: event type\n  private static upgrade(event: any) {\n    const db = event.target.result;\n\n    let overStore = db.createObjectStore(\"over\", { keyPath: \"id\" });\n    overStore.createIndex(\"server-group\", [\"server\", \"group\"], {unique:false});\n    overStore.createIndex(\"server\", \"server\", { unique: false });\n    overStore.createIndex(\"group\", \"group\", { unique: false });\n    overStore.createIndex(\"articleNumber\", \"articleNumber\", { unique: false });\n    overStore.createIndex(\"headers\", \"headers\", { unique: false });\n    overStore.createIndex(\"metadata\", \"metadata\", { unique: false });\n\n    let bodyStore = db.createObjectStore(\"body\", { keyPath: \"id\" });\n    bodyStore.createIndex(\"server-id\", [\"server\", \"id\"], {unique:false});\n    bodyStore.createIndex(\"server\", \"server\", { unique: false });\n    bodyStore.createIndex(\"body\", \"articleNumber\", { unique: false });\n  }\n\n  constructor(db: any) {\n    this.db = db;\n  }\n\n  // todo: fix type\n  // todo: only return once finished..\n  public async persistOverArticle(server: string, group: string, overArticle: any) {\n    let transaction = this.db.transaction([\"over\"], \"readwrite\");\n    let objectStore = transaction.objectStore(\"over\");\n    const storageObj = {\n      id: overArticle.headers[\"MESSAGE-ID\"],\n      \"server-group\": [server, group],\n      server: server,\n      group: group,\n      articleNumber: overArticle.articleNumber,\n      headers: JSON.stringify(overArticle.headers),\n      metadata: JSON.stringify(overArticle.metadata)\n    };\n    objectStore.add(storageObj);\n  }\n\n  // todo: fix overview type\n  public async persistOverArticles(server: string, group: string, overviewArticles: Article[]) {\n    overviewArticles.forEach((overArticle: any) => this.persistOverArticle(server, group, overArticle));\n  }\n\n  public async retrieveOverArticles(server: string, group: string): Promise<any[]> {\n    return new Promise((resolve => {\n      let transaction = this.db.transaction('over');\n      let objectStore = transaction.objectStore('over');\n      let index = objectStore.index(\"server-group\");\n      const overArticles: any[] = [];\n\n      index.openCursor(IDBKeyRange.only([server, group])).onsuccess = (event: any) => {\n        let cursor = event.target.result;\n        if(cursor) {\n          const overArticle = {\n            articleNumber: cursor.value.articleNumber,\n            headers: JSON.parse(cursor.value.headers),\n            metadata:  JSON.parse(cursor.value.metadata),\n          };\n          overArticles.push(overArticle);\n          cursor.continue();\n        } else {\n          resolve(overArticles);\n        }\n      };\n    }));\n  }\n\n  // todo: fix type\n  // todo: only return once finished..\n  public async persistBody(server: string, article: any) {\n    let transaction = this.db.transaction([\"body\"], \"readwrite\");\n    let objectStore = transaction.objectStore(\"body\");\n    const storageObj = {\n      id: article.messageId,\n      server: server,\n      body: JSON.stringify(article.body),\n    };\n    objectStore.add(storageObj);\n  }\n\n  public async retrieveBody(server: string, id: string): Promise<Article> {\n    return new Promise((resolve, reject) => {\n      let transaction = this.db.transaction('body');\n      let objectStore = transaction.objectStore('body');\n      let index = objectStore.index(\"server-id\");\n      index.openCursor(IDBKeyRange.only([server, id])).onsuccess = (event: any) => {\n        let cursor = event.target.result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n        const body = {\n          messageId: cursor.value.id,\n          body: JSON.parse(cursor.value.body),\n        };\n        resolve(body);\n      }\n    });\n  }\n}\n","import moment, {Moment} from \"moment\";\nimport Newsie from 'newsie';\nimport parse from \"emailjs-mime-parser\";\nimport {Author} from \"../author/Author\";\nimport {Content} from \"./Content\";\nimport {Group} from \"../group/Group\";\nimport {GroupCache} from \"../group/GroupCache\";\nimport {Attachment} from \"./Attachment\";\nimport {mimeWordsDecode} from \"emailjs-mime-codec\";\nimport {Article as NewsieArticle} from \"newsie\";\n\nexport type ArticleId = string;\n\nexport interface ArticleInterface {\n  id: ArticleId,\n  subject: string,\n  date: Moment,\n  author: Author,\n  followUps: ArticleInterface[],\n  number: number,\n\n  contents(): Promise<{text: Content[], attachments: Attachment[]}>,\n}\n\nexport class Article implements ArticleInterface {\n  private static readonly whitespaceRegex = new RegExp(/^$|\\s+/);\n  public readonly id: ArticleId;\n  public readonly number: number;\n  public readonly subject: string;\n  public readonly date: Moment;\n  public readonly author: Author;\n  public hasattachment: string;\n  public size: string;\n  public references: ArticleId[] = [];\n  public directReference: ArticleId = '';\n  public followUps: ArticleInterface[] = [];\n  private group: Group;\n  private readonly newsieClient: Newsie;\n\n  constructor(id: string, number: number, subject: string, date: Moment, author: Author, hasattachment: string, size: string, group: Group, newsieClient: Newsie) {\n    this.id = id;\n    this.number = number;\n    this.subject = subject;\n    this.date = date;\n    this.author = author;\n    this.hasattachment = hasattachment;\n    this.size = size;\n    this.group = group;\n    this.newsieClient = newsieClient;\n  }\n\n  public static ArticleFromNewsieArticle(a: NewsieArticle, group: Group, newsieClient: Newsie): Article | null {\n    if (!a || !a.headers || !a.articleNumber) {\n      return null;\n    }\n    const date = moment(a.headers.DATE);\n    const author = Author.authorFromString(mimeWordsDecode(a.headers.FROM));\n    var hasattachment = '';\n    var size = '';\n    var fullSize = 0;\n    if (typeof a.metadata !== 'undefined') {\n        fullSize = Number(a.metadata[\":bytes\"]);\n        // We assume that very large entries do have an attachment.\n        if (fullSize > 10000) {\n            hasattachment = '📎';\n        }\n\n        if (fullSize > 1024*1024)\n            size = (fullSize / (1024*1024)).toFixed(2).toString() + \" MB\";\n        else if (fullSize > 1024)\n            size = (fullSize / (1024)).toFixed(2).toString() + \" KB\";\n        else\n            size = fullSize.toString() + \" B\";\n    }\n    \n    const article = new Article(a.headers['MESSAGE-ID'], a.articleNumber, mimeWordsDecode(a.headers.SUBJECT), date,\n      author, hasattachment, size, group, newsieClient);\n    article.setReferences(a.headers.REFERENCES);\n    return article;\n  }\n\n  public static stripStartEndCitationsFromContents(contents: Content[]) {\n    if (contents.length < 1) {\n      return;\n    }\n    const firstContent = contents[0];\n    if (firstContent.isCitationStart()) {\n      let nextRootIndex = 1;\n      while (nextRootIndex < contents.length && (contents[nextRootIndex].citationLevel !== 0 ||\n        contents[nextRootIndex].text.length === 0)) {\n        nextRootIndex++;\n      }\n      contents.splice(0, nextRootIndex);\n    }\n\n    let citationIndex: number | null = null;\n    for (let i = contents.length - 1; i >= 0; i--) {\n      const content = contents[i];\n      if (content.citationLevel === 0 && !Article.isOnlyWhitespace(content.text)) {\n        break;\n      }\n      if (content.isCitationStart()) {\n        citationIndex = i;\n        break;\n      }\n    }\n\n    if (citationIndex !== null) {\n      contents.splice(citationIndex, contents.length - citationIndex)\n    }\n  }\n\n  private static isOnlyWhitespace(text: string): boolean {\n    return Article.whitespaceRegex.test(text);\n  }\n\n  private static bodyToContents(body: string[]): {text: Content[], attachments: Attachment[]} {\n    const contents: Content[] = [];\n    let attachments: Attachment[] = [];\n\n    if (body[0] === 'This is a multi-part message in MIME format.') {\n      const missingMimeHeader =\n        'MIME-Version: 1.0\\n' +\n        `Content-Type: multipart/mixed; boundary=${body[1].substring(2)}\\n` +\n        '\\n';\n      const mimeInfo = parse(missingMimeHeader + body.join('\\n'));\n      body = mimeInfo.childNodes\n        .filter((node: any) => node.contentType.value === 'text/plain')\n        .map((node: any) => new TextDecoder(\"utf-8\").decode(node.content))\n        .join('\\n')\n        .split('\\n');\n      attachments = mimeInfo.childNodes\n        .filter((node: any) => node.contentType.value !== 'text/plain')\n        .map((node: any) => {\n          const base64 = node.raw.substring(node.raw.lastIndexOf('\\n\\n')).replace(/\\s/g, \"\");\n          return {\n            contentType: node.contentType.value,\n            name: node.contentType.params.name,\n            dataUrl: `data:${node.contentType.value};base64,${base64}`\n          };\n        });\n    }\n\n    if (!body) {\n      return {text: contents, attachments};\n    }\n\n    body.forEach((line: string) => {\n      let citationLevel = 0;\n      while (citationLevel < line.length && line[citationLevel] === \">\") {\n        citationLevel++;\n      }\n      line = line.substring(citationLevel, line.length);\n      contents.push(new Content(line, citationLevel));\n    });\n    return {text: contents, attachments};\n  }\n\n  public setReferences(references: string) {\n    if (references.length <= 0) {\n      return;\n    }\n    this.references = references.split(' ');\n    this.directReference = this.references[this.references.length - 1];\n  }\n\n  public async contents(): Promise<{text: Content[], attachments: Attachment[]}> {\n    const groupCache = await GroupCache.instance();\n    let article = await groupCache.retrieveBody(this.group.host, this.id);\n    if (!article || !article.body) {\n      article = (await this.newsieClient.body(this.id)).article;\n      if (article.body) {\n        await groupCache.persistBody(this.group.host, article);\n      } else {\n        article.body = [\n          '[newsR: content not found and not cached]'\n        ]\n      }\n    }\n    const contents = Article.bodyToContents(article.body);\n    // Article.stripStartEndCitationsFromContents(contents.text);\n    return {text: contents.text, attachments: contents.attachments};\n  }\n\n  public async postFollowup(author: Author, subject: string, body: string[]): Promise<void> {\n    await this.group.post(author, subject, body, this.references.concat(this.id));\n  }\n\n  public static parseQuote(contents: Content[], article: ArticleInterface): string {\n    let quoteString = `On ${article.date.format(`YYYY-MM-DD HH:mm`)}, ${article.author.name} wrote:\\n`;\n    for(let i = 0; i < contents.length; i++) {\n      const content = contents[i];\n      if( content.text === \"-- \") {\n        break;\n      }\n      quoteString += (`>`.repeat(content.citationLevel+1) + ` ${content.text}\\n`)\n    }\n    return quoteString;\n  }\n}\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface Props {\n}\n\ninterface State {\n\n}\n\nexport class Loading extends React.Component<Props, State> {\n\n  render() {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading\">\n          <FontAwesomeIcon icon=\"spinner\" spin />&nbsp;&nbsp;Loading ...\n        </div>\n      </div>\n    );\n  }\n}\n","import {ArticleInterface} from \"./Article\";\nimport React, { Fragment } from \"react\";\nimport Media from \"react-media\";\nimport {LARGE_SCREEN_QUERY, SMALL_SCREEN_QUERY} from \"../template/Constants\";\n\ninterface Props {\n  article: ArticleInterface\n}\n\ninterface State {\n}\n\nexport class ArticleAuthor extends React.Component<Props, State> {\n  render() {\n    const {article} = this.props;\n    return (\n      <div className=\"article-detail-author\">\n        {article.date.format(\"YYYY-MM-DD HH:mm\")} by {article.author.name}\n        <Media queries={{small: SMALL_SCREEN_QUERY, large: LARGE_SCREEN_QUERY}}>\n          {matches => (\n            <Fragment>\n              {matches.small && <br />}\n              {matches.large && <Fragment>&nbsp;</Fragment>}\n            </Fragment>\n          )}\n        </Media>\n        <a href={`mailto:${article.author.email}`}>{article.author.email}</a>\n      </div>\n    );\n  }\n}\n","export const SMALL_SCREEN_QUERY = \"(max-width: 47rem)\";\nexport const LARGE_SCREEN_QUERY = \"(min-width: 47.1rem)\";\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {SMALL_SCREEN_QUERY} from \"./Constants\";\nimport Media from \"react-media\";\n\ninterface Props {\n  icon: IconProp\n}\n\ninterface State {\n}\n\nexport class IconButton extends React.Component<Props, State> {\n\n  render() {\n    const {icon, children} = this.props;\n    return (\n      <Media query={SMALL_SCREEN_QUERY}>\n        {\n          screenIsSmall => screenIsSmall ?\n            < div className=\"icon-button\">\n              <FontAwesomeIcon icon={icon}/>\n            </div> :\n            < div className=\"icon-button\">\n              <FontAwesomeIcon icon={icon}/>&nbsp;&nbsp;{children}\n            </div>\n        }\n      </Media>\n    );\n  }\n}\n","import {Article, ArticleId, ArticleInterface} from \"./Article\";\nimport React, {ReactNode} from \"react\";\nimport {Loading} from \"../template/Loading\";\nimport {Content} from \"./Content\";\nimport {ArticleAuthor} from \"./ArticleAuthor\";\nimport {IconButton} from \"../template/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport {Attachment} from \"./Attachment\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface Props {\n  article: ArticleInterface;\n  showContent: boolean;\n  onClickHeader: ((id: ArticleId) => void) | null;\n  hasSimpleHeader: boolean;\n  baseUrl: string;\n  groupName: string;\n}\n\nconst defaultProps: Partial<Props> = {\n  onClickHeader: null,\n  hasSimpleHeader: false\n};\n\ninterface State {\n  contents: Content[];\n  attachments: Attachment[];\n  isContentLoading: boolean;\n}\n\nexport class ArticleDetail extends React.Component<Props, State> {\n  static defaultProps: Partial<Props>;\n  state: Readonly<State> = {\n    isContentLoading: false,\n    contents: [],\n    attachments: []\n  };\n\n  async componentDidMount() {\n    this.loadContent();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (this.props.article !== prevProps.article || this.props.showContent !== prevProps.showContent) {\n      this.loadContent();\n    }\n  }\n\n  private async loadContent() {\n    if (!this.props.showContent) {\n      return;\n    }\n    this.setState({isContentLoading: true, contents: [], attachments: []});\n    const contents = await this.props.article.contents();\n    this.setState({isContentLoading: false, contents: contents.text, attachments: contents.attachments});\n  }\n\n  private nestContent(level: number, text: string): ReactNode {\n    if (level === 0) {\n      return text;\n    }\n    return <div className=\"nested-content\">{this.nestContent(level - 1, text)}</div>;\n  }\n\n\n  private static createMailBody(contents: Content[], article: ArticleInterface): string {\n    const quote = Article.parseQuote(contents, article);\n    const signature = localStorage.getItem('signature')\n    return encodeURIComponent(signature ? `${quote}\\n\\n-- \\n${signature}` : quote);\n  }\n\n  render() {\n    const {article, showContent, onClickHeader, hasSimpleHeader, groupName} = this.props;\n    const {contents, attachments, isContentLoading} = this.state;\n    return (\n      <div className=\"article-detail\">\n        <div className=\"header\" onClick={() => onClickHeader && onClickHeader(article.id)}>\n          {hasSimpleHeader && <div className=\"article-detail-chevron\">\n            {\n              showContent ? <FontAwesomeIcon icon=\"chevron-down\"/> : <FontAwesomeIcon icon=\"chevron-right\"/>\n            }\n          </div> }\n          {hasSimpleHeader\n            ? <ArticleAuthor article={article}/>\n\n            : <div>\n              <h1 className=\"article-detail-title\">{article.subject}</h1>\n              <ArticleAuthor article={article}/>\n            </div>\n          }\n          <div className=\"article-buttons\">\n            <div className=\"article-button\">\n              <a href={`mailto:${article.author.email}?subject=${encodeURIComponent(article.subject)}&body=${ArticleDetail.createMailBody(contents, article)}`}\n                 className=\"no-link\" onClick={e => e.stopPropagation()}>\n                <IconButton icon=\"envelope\">Reply</IconButton>\n              </a>\n            </div>\n            <div className=\"article-button\">\n              <Link to={`/post/${groupName}/${article.number}`} className=\"no-link\">\n                <IconButton icon=\"hand-point-right\">Follow Up</IconButton>\n              </Link>\n            </div>\n          </div>\n        </div>\n        {isContentLoading && <Loading/>}\n        {showContent && <div className=\"article-detail-content\">\n          {contents.map((content, index) =>\n            <div key={index}>\n              {this.nestContent(content.citationLevel, content.text + \"\\n\")}\n            </div>)}\n          {attachments.length > 0 &&\n          <div>\n              <p>Attachments:</p>\n              <ul className=\"attachments\">\n                {attachments.map((attachment) =>\n                  <li key={attachment.name}>\n                    <a\n                      href={attachment.dataUrl}\n                      download={attachment.name}\n                    >\n                      {['image/png', 'image/gif', 'image/jpeg', 'image/svg+xml'].includes(attachment.contentType) ? (\n                        <img src={attachment.dataUrl}  alt={attachment.name} />\n                      ) : (\n                        <span>{attachment.name}</span>\n                      )\n                      }\n                    </a>\n                  </li>)}\n              </ul>\n          </div>\n          }\n        </div>}\n      </div>\n    );\n  }\n}\n\nArticleDetail.defaultProps = defaultProps;\n","import React from \"react\";\nimport {ArticleId, ArticleInterface} from \"./Article\";\nimport {ArticleDetail} from \"./ArticleDetail\";\nimport {CollapsibleThreadList} from \"./CollapsibleThreadList\";\n\n\ninterface State {\n}\n\ninterface Props {\n  article: ArticleInterface;\n  showContent: boolean;\n  onClick: (id: ArticleId) => void;\n  baseUrl: string;\n  groupName: string;\n}\n\nexport class CollapsibleThreadListEntry extends React.Component<Props, State> {\n  render() {\n    const {showContent, article, onClick, baseUrl, groupName} = this.props;\n    return (\n      <li key={article.id}>\n        <ArticleDetail article={article} baseUrl={baseUrl} groupName={groupName} showContent={showContent} onClickHeader={id => onClick(id)}\n                       hasSimpleHeader={true}/>\n        {showContent && <div>\n          <CollapsibleThreadList articles={article.followUps} baseUrl={baseUrl} groupName={groupName} />\n          <div className=\"collapsible-line\" onClick={() => onClick(article.id)} />\n        </div>}\n      </li>\n    )\n  }\n}\n","import React from \"react\";\nimport {ArticleId, ArticleInterface} from \"./Article\";\nimport {CollapsibleThreadListEntry} from \"./CollapsibleThreadListEntry\";\n\n\ninterface State {\n  forceHideIds: ArticleId[];\n}\n\ninterface Props {\n  articles: ArticleInterface[];\n  baseUrl: string;\n  groupName: string;\n}\n\nexport class CollapsibleThreadList extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    forceHideIds: []\n  };\n\n  handleArticleClick(articleId: ArticleId) {\n    const {forceHideIds} = this.state;\n    if (forceHideIds.includes(articleId)) {\n      forceHideIds.splice(forceHideIds.indexOf(articleId), 1)\n    } else {\n      forceHideIds.push(articleId);\n    }\n    this.setState({forceHideIds: forceHideIds});\n  }\n\n  render() {\n    const {articles, baseUrl, groupName} = this.props;\n    const {forceHideIds} = this.state;\n\n    return (\n      <div className=\"collapsible-thread-list\">\n        <ul>\n          {articles.map(article =>\n            <CollapsibleThreadListEntry baseUrl={baseUrl} groupName={groupName} key={article.id} article={article}\n                                        showContent={!forceHideIds.includes(article.id)}\n                                        onClick={id => this.handleArticleClick(id)}/>)}\n        </ul>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport {Article} from \"./Article\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {Group} from \"../group/Group\";\nimport {Helmet} from \"react-helmet\";\nimport {ArticleDetail} from \"./ArticleDetail\";\nimport {CollapsibleThreadList} from \"./CollapsibleThreadList\";\n\n\ninterface State {\n  content: string\n}\n\ninterface ArticleDetailRouteParams {\n  number: string;\n  name: string;\n}\n\ninterface Props extends RouteComponentProps<ArticleDetailRouteParams> {\n  group: Group;\n  article: Article | null;\n}\n\nexport class ThreadDetail extends React.Component<Props, State> {\n  render() {\n    const {article, match} = this.props;\n    const baseUrl = `/groups/${match.params.name}/`;\n\n    if (article === null) {\n      return \"Article not found!\";\n    }\n\n    return (\n      <div className=\"thread-detail\">\n        <Helmet>\n          <title>newsR - {article?.subject}</title>\n        </Helmet>\n        <ArticleDetail baseUrl={baseUrl} groupName={match.params.name} article={article} showContent={true}/>\n        <CollapsibleThreadList baseUrl={baseUrl} groupName={match.params.name} articles={article?.followUps}/>\n      </div>\n    )\n  }\n}\n","import React, {ReactNode} from \"react\";\n\ninterface Props {\n  sidebar: ReactNode,\n  content1: ReactNode,\n  content2: ReactNode\n}\n\ninterface State {\n}\n\nexport class SidebarContent extends React.Component<Props, State> {\n\n  render() {\n    return (\n    /* ELKE */\n      <div className=\"sidebar-content\">\n        <div className=\"sidebar-content-sidebar\">{this.props.sidebar}</div>\n        <div className=\"sidebar-content-content-1\">{this.props.content1}</div>\n        <div className=\"sidebar-content-content-2\">{this.props.content2}</div>\n      </div>\n\n\n      /*<div className=\"sidebar-content\">\n              <div className=\"sidebar-content-sidebar\">{this.props.sidebar}</div>\n              <div className=\"sidebar-content-content\">{this.props.content}</div>\n            </div>*/\n    );\n  }\n}\n","import Newsie from 'newsie';\nimport {Article as NewsieArticle} from \"newsie\";\nimport {Author} from \"../author/Author\";\nimport {Article, ArticleInterface} from \"../article/Article\";\nimport {GroupCache} from \"./GroupCache\";\nimport packageJson from '../../package.json';\n\nexport interface GroupInterface {\n  readonly name: string;\n  readonly description: string;\n\n  threads(): Promise<ArticleInterface[]>;\n}\n\ninterface ArticleMap {\n  [key: string]: Article;\n}\n\nexport class Group implements GroupInterface {\n  public readonly name: string;\n  public readonly description: string;\n  public readonly host: string;\n  private readonly newsieClient: Newsie;\n\n  constructor(name: string, description: string, host: string, newsieClient: Newsie) {\n    this.name = name;\n    this.description = description;\n    this.newsieClient = newsieClient;\n    this.host = host;\n  }\n\n  public async article(articleNumber: number): Promise<Article|null> {\n    // todo: fix type\n    const overview: any = await this.newsieClient.over(`${articleNumber}-${articleNumber}`);\n    const groupCache = await GroupCache.instance();\n    await groupCache.persistOverArticles(this.host, this.name, overview.articles);\n    const a: NewsieArticle = overview.articles[0];\n    return Article.ArticleFromNewsieArticle(a, this, this.newsieClient);\n  }\n\n  public async threads(): Promise<Article[]> {\n    const group = (await this.newsieClient.group(this.name)).group;\n    if (group.number === 0) {\n      return [];\n    }\n    // todo: fix type\n    const overview: any = await this.newsieClient.over(`${group.low}-${group.high}`);\n    const groupCache = await GroupCache.instance();\n    await groupCache.persistOverArticles(this.host, this.name, overview.articles);\n    const articles = await groupCache.retrieveOverArticles(this.host, this.name);\n    const articlesByNumber: any[] = articles\n      .sort((a: any, b: any) => a.articleNumber - b.articleNumber)\n      .map((a: any) => {\n        return Article.ArticleFromNewsieArticle(a, this, this.newsieClient);\n      });\n    const articleIdMap: ArticleMap = {};\n    const threads: Article[] = [];\n    articlesByNumber.forEach((article) => {\n      articleIdMap[article.id] = article;\n      if (article.references.length === 0) {\n        threads.push(article);\n      } else {\n        if (articleIdMap[article.directReference]) {\n          articleIdMap[article.directReference].followUps.push(article);\n        }\n      }\n    });\n    threads.sort((a: Article, b: Article) => b.date.unix() - a.date.unix());\n    return threads;\n  }\n\n  public async post(author: Author, subject: string, body: string[], references?: string[]): Promise<void> {\n    const initialResponse = await this.newsieClient.post();\n    if (initialResponse.code !== 340) {\n      // todo: display error..\n      const errorMsg = \"Cannot post: Posting not permitted\";\n      console.error(errorMsg);\n      throw new Error(errorMsg);\n    }\n\n    const article: NewsieArticle = {\n      headers: {\n        From: author.toString(),\n        Newsgroups: this.name,\n        Subject: subject,\n        \"User-Agent\": `newsR/${packageJson.version}`\n      },\n      body: body\n    };\n    if (references && article.headers) {\n      article.headers.References = references.join(' ');\n    }\n\n    const postResponse = await initialResponse.send(article);\n    if (postResponse.code !== 240) {\n      // todo: display error..\n      const errorMsg = \"Posting failed: Posting failed\";\n      console.error(errorMsg);\n      throw new Error(errorMsg);\n    }\n  }\n}\n","import Newsie, {Command, Options as NewsieOptions} from 'newsie';\nimport {Group, GroupInterface} from \"../group/Group\";\n\ninterface ResponseHandler {\n  callback: Function\n  resolve: Function\n  reject: Function\n}\n\nclass WsConnection {\n  private readonly _socket: WebSocket;\n  private readonly _host: string;\n  private readonly _port: number;\n  private _queue: ResponseHandler[];\n  private onCloseCallback: any;\n\n  // todo: type tlsOptions: TlsOptions\n  constructor(host: string, port: number, tlsPort: boolean, tlsOptions: any) {\n    // todo: not sure if this should be here or in .connect()\n    if(!process.env.REACT_APP_WS_TO_NNTP_URL) {\n      throw Error(\"WS_TO_NNTP_URL is not defined!\");\n    }\n    this._socket = new WebSocket(process.env.REACT_APP_WS_TO_NNTP_URL);\n    this._host = host;\n    this._port = port;\n    this._queue = [];\n  }\n\n  public connect = async (): Promise<WebSocket> => {\n    return new Promise((resolve) => {\n      this._socket.addEventListener('open', () => {\n        this.write(`NNTPCONNECT ${this._host} ${this._port}`);\n        this._addSocketHandlers();\n        //return this._tlsPort ? this.upgradeTls() : Promise.resolve(this._socket);\n        resolve(this._socket);\n      });\n    });\n  };\n\n  public disconnect = () => {\n    // Close connection\n    this._socket.close();\n    //this._socket.removeAllListeners();\n    //this._socket.unref();\n    //if (this._tlsPromiseReject) {\n    //    this._tlsPromiseReject();\n    //}\n\n    // Empty the queue\n    this._queue.forEach(h => h.reject(new Error('Disconnected from server')));\n    this._queue = [];\n  };\n\n  public write = (str: string): void => {\n    this._socket.send(str);\n  };\n\n  public addCallback = (callback: Function, resolve: Function, reject: Function) => {\n    this._queue.push({callback, resolve, reject})\n  };\n\n  public setOnCloseCallback(callback: any) {\n    this.onCloseCallback = callback;\n  };\n\n  private _addSocketHandlers = (): void => {\n    this._socket.onmessage = (event) => {\n      const responseHandler = this._queue[0];\n      let response = responseHandler.callback(event.data);\n      this._queue.shift();\n      responseHandler.resolve(response);\n    };\n    this._socket.onerror = err => {\n      this._queue.forEach(h => h.reject(err));\n      this.disconnect();\n      throw err;\n    };\n    this._socket.onclose = () => {\n      console.error('WS: Connection closed');\n      this._queue.forEach(h => h.reject(new Error('Connection closed')));\n      //this._socket.removeEventListener()\n      this.onCloseCallback();\n    };\n  };\n\n}\n\nclass WsNewsie extends Newsie {\n  public _wsConnection: WsConnection;\n\n  constructor(options: NewsieOptions) {\n    super(options);\n    const {\n      host,\n      port = 119,\n      tlsPort = false,\n      tlsOptions = {}\n    } = options;\n    this._wsConnection = new WsConnection(host, port, tlsPort, tlsOptions);\n  }\n\n  public setOnCloseCallback(callback: any) {\n    this._wsConnection.setOnCloseCallback(callback);\n  }\n\n  public connect = async (): Promise<any> => {\n    const socket = await this._wsConnection.connect();\n    const response = await this.sendData(Command.GREETING);\n    return {\n      ...response,\n      socket\n    }\n  };\n\n  public disconnect = () => this._wsConnection.disconnect();\n\n  public sendData = (command: Command, payload?: string): Promise<any> =>\n    new Promise((resolve, reject) => {\n      this._wsConnection.addCallback((text: string) => JSON.parse(text), resolve, reject);\n      if (payload) {\n        this._wsConnection.write(payload)\n      }\n    })\n      //.then(this._interceptor)\n      .then((response: any) => (response.code < 400 ? response : Promise.reject(response)))\n}\n\nexport interface ServerInterface {\n  readonly host: string;\n  readonly port: number | undefined;\n\n  getGroupByName(name: string): Promise<GroupInterface | null>;\n\n  groups(): Promise<GroupInterface[]>;\n}\n\nexport class Server implements ServerInterface {\n  private static server: Server | null = null;\n  private static keepaliveIntervalReference: NodeJS.Timeout | null = null;\n  public readonly host: string;\n  public readonly port: number | undefined;\n  private newsieClient: WsNewsie;\n\n  constructor(host: string, port?: number) {\n    this.host = host;\n    if (port) {\n      this.port = port;\n    }\n    this.newsieClient = this.initWsNewsieClient(this.host, this.port);\n  }\n\n  public static async instance(): Promise<Server> {\n    if (this.server === null) {\n      const nntpUrl = localStorage.getItem(\"nntpUrl\");\n      const nntpPortStr = localStorage.getItem(\"nntpPort\");\n      if (!nntpUrl || !nntpPortStr) {\n        throw new Error('Server URl or Server Port not specified.');\n      }\n      this.server = new Server(nntpUrl, parseInt(nntpPortStr));\n      await this.server.connectAndVerifyNewsieClient();\n    }\n    return this.server;\n  }\n\n  private initWsNewsieClient(host: string, port?: number | undefined): WsNewsie {\n    const newsieOptions: NewsieOptions = {\n      host\n    };\n    if (port && !isNaN(port)) {\n      newsieOptions.port = port;\n    }\n    this.newsieClient = new WsNewsie(newsieOptions);\n    this.newsieClient.setOnCloseCallback(() => {\n      console.log('WS: Reconnect!');\n      this.initWsNewsieClient(host, port);\n      this.connectAndVerifyNewsieClient();\n    });\n    return this.newsieClient;\n  }\n\n  private async connectAndVerifyNewsieClient(): Promise<WebSocket> {\n    const connection = await this.newsieClient.connect();\n    if (connection.code !== 200) {\n      throw Error('No connection to server.');\n    }\n    const capabilities = await this.newsieClient.capabilities();\n    if (!capabilities.capabilities.LIST.includes('NEWSGROUPS')) {\n      throw Error('Server does\\'t have the required LIST NEWSGROUPS capability.');\n    }\n    return connection.socket;\n  }\n\n  public async getGroupByName(name: string): Promise<Group | null> {\n    const newsgroups = await this.newsieClient.listNewsgroups(name);\n    if (newsgroups.newsgroups.length !== 1) {\n      return null;\n    }\n    return newsgroups.newsgroups.map((ng) => {\n      const description = typeof ng.description === 'undefined' ? '' : ng.description;\n      return new Group(ng.name, description, this.host, this.newsieClient);\n    })[0];\n  }\n\n  public async groups(): Promise<Group[]> {\n    // todo: remove 'tu-graz*' once https://gitlab.com/timrs2998/newsie/merge_requests/2 is merged\n    const prefix = localStorage.getItem(\"nntpGroupPrefix\");\n    const pre = prefix ? prefix : undefined;\n    const newsgroups = await this.newsieClient.listNewsgroups(pre);\n    return newsgroups.newsgroups.map((ng) => {\n      const description = typeof ng.description === 'undefined' ? '' : ng.description;\n      return new Group(ng.name, description, this.host, this.newsieClient);\n    });\n  }\n\n  public static async resetServer(): Promise<void>{\n    this.server = null;\n    await Server.instance();\n  }\n}\n","export function subscribeGroup(group: string) {\n  const subscribedGroups = getSubscribedGroups();\n\n  if (!!subscribedGroups.find(g => g === group))\n    return;\n\n  localStorage.setItem(\"subscribedGroups\", JSON.stringify(subscribedGroups.concat(group)))\n}\n\nexport function unsubscribeGroup(group: string) {\n  const subscribedGroups = getSubscribedGroups();\n\n  if (!subscribedGroups.find(g => g === group))\n    return;\n\n  localStorage.setItem(\"subscribedGroups\", JSON.stringify(subscribedGroups.filter(g => g !== group)))\n}\n\nexport function getSubscribedGroups(): string[] {\n  const subscribedGroups = localStorage.getItem(\"subscribedGroups\");\n\n  if (!subscribedGroups)\n    return [];\n\n  return JSON.parse(subscribedGroups);\n}\n\nexport function addReadArticle(group: string, article: string) {\n  const readArticles = getReadArticles(group);\n\n  if (!!readArticles.find(a => a === group))\n    return;\n\n  localStorage.setItem(group, JSON.stringify(readArticles.concat(article)))\n}\n\nexport function getReadArticles(group: string): string[] {\n  const readArticles = localStorage.getItem(group);\n\n  if (!readArticles)\n    return [];\n\n  return JSON.parse(readArticles);\n}\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {ListType} from \"./List\";\n\nexport function ListEntry<T extends ListType<T>>(props: {\n  entry: T\n}) {\n  const {entry} = props;\n  const history = useHistory();\n\n  function onPress() {\n    if(entry.replace && entry.url) {\n        history.replace(entry.url);\n    }\n    if(entry.onPress) {\n      entry.onPress(entry);\n    }\n    if(!entry.replace && entry.url) {\n        history.push(entry.url);\n    }\n\n  }\n\n  return (\n\n    <div  onClick={onPress} >\n\n      <div className={\"list-entry \" + entry.class}>\n        {entry.icon &&\n        <div className=\"float\">\n          <FontAwesomeIcon icon={entry.icon}/>\n        </div>\n\n        }\n        <div className=\"list-entry-text\">\n          <span className={\"title\" + (entry.bold ? \" bold\" : \"\")}>{entry.title}</span><br/>\n          <span className={\"subtitle\" + (entry.bold ? \" bold\" : \"\")}>{entry.subtitle}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport {ListEntry} from \"./ListEntry\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nexport type ListType<T> = {\n  title: string\n  url?: string\n  subtitle?: string\n  bold?: boolean\n  class?: string\n  icon?: IconProp\n  onPress?: (entry: T) => void\n  replace?: boolean\n};\n\nexport function List<T extends ListType<T>>(props: {\n  data: T[]\n}) {\n  const {data} = props;\n\n  return (\n    <div>\n      {data.map((entry, index) => <ListEntry key={index} entry={entry}/>)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {TableType, TableColumn} from \"./Table\";\nimport {Author} from \"../author/Author\";\nimport {Moment} from \"moment\";\n\nexport function TableEntry<T extends TableType<T>>(props: {\n  entry: T\n  columns: TableColumn[]\n  urlColumn: string\n}) {\n  const {entry} = props;\n  const {columns} = props;\n  const history = useHistory();\n\n  function onPress() {\n    if(entry.onPress) {\n      entry.onPress(entry);\n    }\n    if(entry.url) {\n        history.push(entry.url);\n    }\n  }\n\n  const row = columns.map((column, i) => {\n            if (entry != null && entry[\"referenceObject\" as keyof TableType<T>] != null)\n            {\n                let value = \"\";\n                let item = \"\";\n                if (column.type === 1)\n                    value = (entry.referenceObject[column.nativeName as keyof object] as Author).toString()\n                else if (column.type === 2)\n                    value = (entry.referenceObject[column.nativeName as keyof object] as Moment).format(\"YYYY-MM-DD HH:mm\")\n                else if (column.type === 3){\n                  value = entry.referenceObject[column.nativeName as keyof object]\n                  item = \"size\";\n                }\n                else if (column.type === 4){\n                  value = entry.referenceObject[column.nativeName as keyof object]\n                  item = \"attachment\";\n                }\n                else\n                    value = entry.referenceObject[column.nativeName as keyof object]\n\n                return item !== \"\"? <td className={item}>{value}</td> : <td>{value}</td>;\n            }\n            else\n                return <td/>\n        });\n\n  return (\n    <tr onClick={onPress} className={\"table-entry\" + (entry.bold ? \" bold\" : \"\") + (entry.class ? \" \" + entry.class : \"\")}>\n        {row}\n    </tr>\n  )\n}\n\n","import React from \"react\";\nimport {TableEntry} from \"./TableEntry\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {faChevronUp, faChevronDown, faSort} from \"@fortawesome/free-solid-svg-icons\";\n\nexport class TableColumn {\n    public readonly name: string\n    public readonly type: number\n    public readonly nativeName: string\n\n    constructor(name: string, type: number, nativeName: string) {\n        this.name = name;\n        this.type = type;\n        this.nativeName = nativeName;\n    }\n}\n\nexport type TableType<T> = {\n  bold?: boolean\n  class?: string\n  url?: string\n  icon?: IconProp\n  onPress?: (entry: T) => void\n  referenceObject: object\n};\n\nexport function Table<T extends TableType<T>>(props: {\n  data: T[]\n  columns: TableColumn[]\n  urlColumn: string,\n  onPressSort: (sortColumn:string, ascending:boolean) => void\n  sortColumn:string\n  ascending:boolean\n}) {\n  const {data} = props;\n  const {columns} = props;\n  const {urlColumn} = props;\n  const {onPressSort} = props;\n  const {sortColumn} = props;\n  const {ascending} = props;\n\n  function onPressSortExec(newSortColumn:string) {\n\n    const sortOrder = localStorage.getItem(\"ascending\");\n    const oldAscending = sortOrder ? JSON.parse(sortOrder) : true;\n    const oldSortColumn = localStorage.getItem(\"sortColumn\") || \"\";\n\n    if (newSortColumn !== oldSortColumn) {\n      localStorage.setItem(\"sortColumn\", newSortColumn);\n      localStorage.setItem(\"ascending\", \"true\");\n      onPressSort(newSortColumn, true);\n    }\n    else {\n      localStorage.setItem(\"ascending\", JSON.stringify(!oldAscending));\n      onPressSort(oldSortColumn, !oldAscending);\n    }\n  }\n\n\n  const header = columns.map((column, i) => {\n        const value = column.name\n        const nativeName = column.nativeName\n        const sortIcon = (column.nativeName === sortColumn) ? (ascending) ? <FontAwesomeIcon icon={faChevronUp} /> : <FontAwesomeIcon icon={faChevronDown} /> : <FontAwesomeIcon icon={faSort} />\n        return <th id={nativeName} onClick={() => onPressSortExec(nativeName)}>{value} {sortIcon}</th>\n    });\n\n    var dataString = null;\n    loadDataString();\n\n    function loadDataString()\n    {\n        if (sortColumn === \"\")\n            dataString = data.map((entry, index) => <TableEntry key={index} entry={entry} columns={columns} urlColumn={urlColumn}/>);\n        else\n            dataString = data.sort((a, b) => a.referenceObject[sortColumn as keyof object] > b.referenceObject[sortColumn as keyof object] ? (ascending ? 1 : -1) : (ascending ? -1 : 1)).map((entry, index) => <TableEntry key={index} entry={entry} columns={columns} urlColumn={urlColumn}/>);\n    }\n\n  return (\n    <table>\n        <thead>\n          <tr>{header}</tr>\n        </thead>\n        <tbody>\n          {dataString}\n        </tbody>\n    </table>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from \"../logo.svg\";\nimport {IconButton} from \"./IconButton\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\n\nexport type Button = {\n  name: string\n  icon: IconProp\n  url?: string\n  onPress?(): void\n}\n\nexport function Header(props: {\n  name: string,\n  subtitle?: string,\n  url?: string\n  searchBar?: {\n    filter: (value: string) => void\n  }\n  buttons?: Button[]\n}) {\n  const {searchBar} = props;\n  return (\n    <div className=\"app-grid-header\">\n      <Logo/>\n      <div className=\"search-bar\">\n        <Heading name={props.name} subtitle={props.subtitle} url={props.url}/>\n        {searchBar && searchBar.filter &&\n        <input className=\"search\" type=\"text\" placeholder=\"Search Message Headers…\"\n               onChange={(e) => searchBar.filter(e.target.value.toLowerCase())}/>\n        }\n      </div>\n      {props.buttons && props.buttons.map((button, index) =>\n        <Button key={index} icon={button.icon} name={button.name} url={button.url} onPress={button.onPress}/>\n      )}\n\n    </div>\n  )\n}\n\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <Link className=\"no-link\" to={'/'}>\n        <img src={logo} alt=\"Logo\"/>\n      </Link>\n    </div>\n  )\n}\n\nfunction Heading(props: {\n  url?: string\n  name: string\n  subtitle?:string\n}) {\n\n    if (props.url) {\n      return (\n        <Link className=\"no-link\" to={`${props.url}`}>\n          <h2>{props.name}</h2>\n          {props.subtitle && (<h3 className=\"heading-subtitle\">{props.subtitle}</h3>)}\n        </Link>\n      )\n    }\n\n  return (\n    <h2>{props.name}</h2>\n  )\n}\n\nfunction Button(props: {\n  icon: IconProp,\n  name: string,\n  url?: string\n  onPress?(): void\n}) {\n  const {icon, name, url, onPress} = props\n  if (url) {\n    return (\n      <Link to={url} className=\"no-link\">\n        <div className=\"icon\">\n          <IconButton icon={icon}>{name}</IconButton>\n        </div>\n      </Link>\n    )\n  }\n\n  if (onPress) {\n    return (\n      <div className=\"icon\" onClick={() => onPress()}>\n        <IconButton icon={icon}>{name}</IconButton>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"icon\">\n      <IconButton icon={icon}>{name}</IconButton>\n    </div>\n  )\n}\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport packageJson from '../../package.json';\n\nexport function Footer() {\n  return (\n    <div className=\"app-grid-footer\">\n      <span className=\"app-name\">newsR {packageJson.version}</span>\n      <a href=\"https://github.com/olliwho/newsR\" className=\"no-link github-link\">\n        <FontAwesomeIcon icon={['fab', 'github']} />&nbsp;&nbsp;Github\n      </a>\n    </div>\n  )\n}\n","import React, {Fragment} from \"react\";\nimport {Group} from \"./Group\";\nimport {ThreadDetail} from \"../article/ThreadDetail\";\nimport {SidebarContent} from \"../template/SidebarContent\";\nimport {Server} from \"../server/Server\";\nimport {Link, Redirect, Route, RouteComponentProps, Switch} from \"react-router-dom\"\nimport Media from \"react-media\";\nimport {LARGE_SCREEN_QUERY, SMALL_SCREEN_QUERY} from \"../template/Constants\";\nimport {getSubscribedGroups} from \"../localStorage/localStorage\";\nimport {Loading} from \"../template/Loading\";\nimport {Article} from \"../article/Article\";\nimport {List} from \"../template/List\";\nimport {Table, TableColumn} from \"../template/Table\";\nimport {Helmet} from \"react-helmet\";\nimport {addReadArticle, getReadArticles} from \"../localStorage/localStorage\";\nimport {Button, Header} from \"../template/Header\";\nimport {Footer} from \"../template/Footer\";\nexport type ArticleId = string;\n\ninterface State {\n  loading: boolean;\n  group: Group | null;\n  groups: Group[];\n  subscribedGroupsName: string[];\n  threads: Article[];\n  readArticles: string[];\n  filteredThreads: Article[];\n  activeArticle: ArticleId;\n  sortColumn: string;\n  ascending: boolean;\n}\n\nexport interface GroupRouteParams {\n  name: string;\n}\n\n\n\nexport class GroupDetail extends React.Component<RouteComponentProps<GroupRouteParams>, State> {\n\n  state: Readonly<State> = {\n    loading: true,\n    group: null,\n    groups: [],\n    subscribedGroupsName: [],\n    threads: [],\n    filteredThreads: [],\n    readArticles: [],\n    activeArticle: \"\",\n    sortColumn: \"\",\n    ascending: true\n  };\n\n  async componentDidMount(): Promise<void> {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return;\n    }\n    const server = await Server.instance();\n    const groups = await server.groups();\n    const subscribedGroupsName = getSubscribedGroups();\n    const group = await server.getGroupByName(this.props.match.params.name);\n    if (group === null) {\n      this.setState({\n        loading: false,\n        group: null,\n        groups,\n        subscribedGroupsName,\n      });\n      return;\n    }\n    const threads = await group.threads();\n    const readArticles = getReadArticles(group.name);\n\n    const sortOrder = localStorage.getItem(\"ascending\");\n    const ascending =  sortOrder ? JSON.parse(sortOrder) : true;\n    const sortColumn = localStorage.getItem(\"sortColumn\") || \"\";\n\n    this.setState({loading: false, group, groups, subscribedGroupsName, threads, readArticles, filteredThreads: threads, sortColumn, ascending});\n  }\n\n  render() {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return <Redirect to={\"/settings\"}/>;\n    }\n\n    const {match} = this.props;\n    const {group, loading, threads, filteredThreads} = this.state;\n\n    const filter = (text: string) => {\n      const filteredThreads = threads.filter(\n        (article) => article.subject.toLowerCase().includes(text) || article.author.name.toLowerCase().includes(text)\n      );\n      this.setState({filteredThreads})\n    };\n\n    const articleTableData = group === null\n      ? []\n      : filteredThreads.map(article => ({\n        bold: !this.state.readArticles.find(a => a === article.id),\n        class: this.state.activeArticle === article.id ? \"active-article\" : \"\",\n        url: `${match.url}/${article.number}`,\n        onPress: () => {\n          addReadArticle(group.name, article.id);\n          this.setState({readArticles: this.state.readArticles.concat(article.id), activeArticle: article.id})\n        },\n        referenceObject: article\n      }));\n\n      const articleListData = group === null\n        ? []\n        : filteredThreads.map(article => ({\n          title: article.subject,\n          subtitle: `${article.author.name} - ${article.date.format('DD.MM.YY HH:mm')}  ${article.hasattachment} `,\n          url: `${match.url}/${article.number}`,\n          bold: !this.state.readArticles.find(a => a === article.id),\n          onPress: () => {\n            addReadArticle(group.name, article.id);\n            this.setState({readArticles: this.state.readArticles.concat(article.id)})\n          }\n        }));\n\n    const buttons1: Button[] = [\n          {\n            name: \"Write\",\n            icon: \"pencil-alt\",\n            url: group === null ? \"\" : `/post/${group.name}`\n          },\n          {\n            name: \"Startpage\",\n            icon: \"home\",\n            url: \"/\"\n          }\n    ];\n    const buttons2: Button[] = [\n          {\n            name: \"Write\",\n            icon: \"pencil-alt\",\n            url: group === null ? \"\" : `/post/${group.name}`\n          },\n          {\n            name: \"Back\",\n            icon: \"arrow-left\",\n            url: group === null ? \"\" : `/groups/${group.name}`\n          },\n          {\n            name: \"Startpage\",\n            icon: \"home\",\n            url: \"/\"\n          }\n    ];\n\n\n    const groupName = group === null ? match.params.name : group.name;\n    const headerWithSearch = <Header name={groupName} searchBar={{filter}} url={match.url} buttons={buttons1}/>;\n    const headerWithoutSearch = <Header name={groupName} url={match.url} buttons={buttons2}/>;\n\n    const isGroupSubscribed = (groupName: string) => {\n        return this.state.subscribedGroupsName.includes(groupName);\n    };\n\n    const getGroups = (isSubscription?: boolean): Group[] => {\n        return this.state.groups.filter(curgroup => isGroupSubscribed(curgroup.name));\n    };\n\n    return (\n      <div className=\"app-grid\">\n        <Helmet>\n          <title>newsR - {groupName}</title>\n        </Helmet>\n        <Switch>\n          <Route path={`${match.path}/:number`}>\n            <Media queries={{small: SMALL_SCREEN_QUERY, large: LARGE_SCREEN_QUERY}}>\n              {matches => (\n                <Fragment>\n                  {matches.small && headerWithoutSearch}\n                  {matches.large && headerWithSearch}\n                </Fragment>\n              )}\n            </Media>\n          </Route>\n          <Route path={`${match.path}`}>\n            {headerWithSearch}\n          </Route>\n        </Switch>\n        <div className=\"app-grid-body\">\n          {\n            loading\n              ? <Loading/>\n              : (group === null ? \"Group not found!\" :\n              <Media query={SMALL_SCREEN_QUERY}>\n                {\n                  screenIsSmall => screenIsSmall\n                    ?\n                    <Switch>\n                      <Route path={`${match.path}/:number`} render={props =>\n                        <ThreadDetail {...props} group={group}\n                                      article={threads.find(thread => thread.number === parseInt(props.match.params.number))\n                                      || null}/>\n                      }/>\n                      <Route path={`${match.path}`}>\n                        <List data={articleListData}/>\n                      </Route>\n                    </Switch>\n                    :\n                    <SidebarContent\n                      sidebar={this.state.subscribedGroupsName.length === 0\n                                                 ? <div className=\"no-thread\">\n                                                   <div className=\"no-thread-text\">\n                                                     Welcome to newsR - <Link to={`/groups-manage`}>Subscribe to a newsgroup</Link> to get started!\n                                                   </div>\n                                                 </div>\n                                                 : <List data={getGroups(true).map((curgroup) => ({\n                                                   title: curgroup.name,\n                                                   subtitle: curgroup.description,\n                                                   url: `/groups/${curgroup.name}`,\n                                                   bold: group.name === curgroup.name,\n                                                   class: group.name === curgroup.name ? \"active-group\" : \"\",\n                                                    onPress: () => {\n                                                          this.componentDidMount();\n                                                    }\n                                                 }))}/>}\n\n                      content1={<Table onPressSort={(sortColumn, ascending) => this.setState({sortColumn: sortColumn, ascending: ascending})}\n                                       sortColumn={this.state.sortColumn}\n                                       ascending={this.state.ascending}\n                                       data={articleTableData}\n                                       columns={[new TableColumn(\"Subject\", 0, \"subject\"),\n                                                 new TableColumn(\"Author\", 1, \"author\"),\n                                                 new TableColumn(\"Date\", 2, \"date\"),\n                                                 new TableColumn(\"Size\", 3, \"size\"),\n                                                 new TableColumn(\"📎\", 4, \"hasattachment\")]}\n                                       urlColumn=\"url\"/>}\n\n                      content2={\n                        <Switch>\n                          <Route path={`${match.path}/:number`} render={props =>\n                            <ThreadDetail {...props} group={group}\n                                          article={threads.find(thread => thread.number === parseInt(props.match.params.number))\n                                          || null}/>\n                          }/>\n                          <NoThread url={match.path} groupName={group.name}/>\n                        </Switch>\n                      }/>\n                    }\n              </Media>)\n          }\n        </div>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nfunction NoThread(props: {\n  url: string\n  groupName: string\n}) {\n  return (\n    <Route path={props.url}>\n      <div className=\"no-thread\">\n        <div className=\"no-thread-text\">\n          {\"Welcome to \" + props.groupName}\n        </div>\n        <div className=\"no-thread-text\">\n          Please select a thread or <Link to={`/post/${props.groupName}`}>write</Link> a new post!\n        </div>\n      </div>\n    </Route>\n  )\n}\n\n","import React, {ChangeEvent, FormEvent} from \"react\";\nimport {Server} from \"../server/Server\";\nimport {Author} from \"../author/Author\";\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {Group} from \"../group/Group\";\nimport {Article} from \"../article/Article\";\nimport {Loading} from \"../template/Loading\";\nimport {Helmet} from \"react-helmet\";\nimport {Header} from \"../template/Header\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface State {\n  loading: boolean;\n  sending: boolean;\n  done: boolean;\n  group: Group | null;\n  article: Article | null;\n  author: string;\n  subject: string;\n  content: string;\n  email: string;\n}\n\nexport interface PostRouteParams {\n  name: string;\n  number: string;\n}\n\nclass _Post extends React.Component<RouteComponentProps<PostRouteParams>, {}> {\n\n  public static replyStr = 'Re: ';\n\n  state: Readonly<State> = {\n    loading: true,\n    sending: false,\n    done: false,\n    group: null,\n    article: null,\n    author: '',\n    subject: '',\n    content: '',\n    email: ''\n  };\n\n  async componentDidMount(): Promise<void> {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return;\n    }\n\n    const {match} = this.props;\n    const server = await Server.instance();\n    const group = await server.getGroupByName(match.params.name);\n    this.setState({\n      author: localStorage.getItem('authorName') || \"\",\n      email: localStorage.getItem('authorEmail') || \"\"\n    });\n    if (!group) {\n      this.setState({\n        group: null,\n        article: null,\n        loading: false\n      });\n      return;\n    }\n\n    const signature = localStorage.getItem(\"signature\");\n    let content = signature ? `\\n\\n-- \\n${signature}` : \"\";\n\n    if (!match.params.number) {\n      this.setState({\n        group,\n        content,\n        article: null,\n        loading: false\n      });\n      return;\n    }\n    const article = await group.article(parseInt(match.params.number));\n    if (!article) {\n      this.setState({\n        group: null,\n        article: null,\n        loading: false\n      });\n      return;\n    }\n    const subject = article.subject.startsWith(_Post.replyStr) ? article.subject : _Post.replyStr + article.subject;\n\n    const contents = await article.contents();\n    const quote = Article.parseQuote(contents.text, article);\n\n    content = signature ? `${quote}\\n\\n-- \\n${signature}` : quote;\n\n    this.setState({\n      group,\n      article,\n      subject,\n      content,\n      loading: false\n    });\n  }\n\n  async timeout(delay: number) {\n    return new Promise( res => setTimeout(res, delay) );\n  }\n\n  async send(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    this.setState({\n      sending: true\n    });\n    const {group, article, subject, author, email, content} = this.state;\n    if (!group) {\n      console.error('Error: cannot send, group not found.');\n      return;\n    }\n    const authorClass = new Author(author, email);\n\n    // removed updating since it is now obligatory to set a name and email in the settings\n    // localStorage.setItem('authorName', author);\n    // localStorage.setItem('authorEmail', email);\n    if (article) {\n      await article.postFollowup(authorClass, subject, [content]);\n    } else {\n      await group?.post(authorClass, subject, [content]);\n    }\n    this.setState({\n      sending: false,\n      done: true\n    });\n    await this.timeout(1000)\n    this.props.history.goBack();\n  }\n\n  render() {\n    const nntpUrl = localStorage.getItem(\"nntpUrl\");\n    const nntpPortStr = localStorage.getItem(\"nntpPort\");\n    if (!nntpUrl || !nntpPortStr) {\n      return <Redirect to={\"/settings\"}/>;\n    }\n    const {match} = this.props;\n    const {group, article, loading, subject, author, email, content, sending, done} = this.state;\n\n    let headerText = group === null ? match.params.name : group.name;\n    let headerSubtitle = \"\";\n    if (article) {\n      headerText += ` ${_Post.replyStr + article.subject}`;\n      headerSubtitle = article.date.format(\"YYYY-MM-DD HH:mm\") + \" by \" + article.author.name;\n    }\n    // todo: form validation, author\n    // todo: fix reload bug\n    return (\n      <div className=\"app-grid\">\n        <Helmet>\n          <title>newsR - {headerText}</title>\n        </Helmet>\n        <Header name={headerText} subtitle={headerSubtitle} url={match.url}/>\n        <div className=\"app-grid-body\">\n          {\n            loading ? <Loading/> : (group === null ? \"Group not found\" :\n              <form className=\"post-article\" acceptCharset=\"UTF-8\" onSubmit={(event: FormEvent<HTMLFormElement>) => this.send(event)}>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"author\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={author}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        author: event.currentTarget.value\n                      })\n                    }}\n                  />\n                  <input\n                    required\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"email@provider.tld\"\n                    value={email}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        email: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <input\n                    required\n                    name=\"subject\"\n                    type=\"text\"\n                    placeholder=\"Subject: …\"\n                    value={subject}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        subject: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                {article && (\n                  <div className=\"input-group\">\n                    <input\n                      name=\"followup to\"\n                      type=\"hidden\"\n                      value={article?.references.concat(article.id).join(' ')}\n                      readOnly\n                    />\n                  </div>\n                )}\n                <div className=\"input-group\">\n                  <textarea\n                    required\n                    value={content}\n                    onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\n                      this.setState({\n                        content: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <button className=\"submit\" type=\"submit\" disabled={sending || done}>\n                    {\n                      sending ? <FontAwesomeIcon icon=\"spinner\" spin />\n                      : (done ? \"Sent!\" : \"Send\")\n                    }\n                  </button>\n                  <button className=\"back\" type=\"reset\" onClick={() => this.props.history.goBack()}>Go back</button>\n                </div>\n              </form>)\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Post = withRouter(_Post);\n","import React, {useEffect, useState} from \"react\";\nimport {Server} from \"../server/Server\";\nimport {List} from \"../template/List\";\nimport {Loading} from \"../template/Loading\";\nimport {Group} from \"../group/Group\";\nimport {Helmet} from \"react-helmet\"\nimport {Button, Header} from \"../template/Header\";\nimport {Footer} from \"../template/Footer\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {getSubscribedGroups, subscribeGroup, unsubscribeGroup} from \"../localStorage/localStorage\";\nimport {Link, Route, Switch, Redirect} from \"react-router-dom\";\n\ninterface StartPageState {\n  groups: Group[],\n  filterText: string,\n  subscribedGroupsName: string[]\n}\n\nexport function StartPage() {\n  const nntpUrl = localStorage.getItem(\"nntpUrl\");\n  const nntpPortStr = localStorage.getItem(\"nntpPort\");\n  if (!nntpUrl || !nntpPortStr) {\n    return <Redirect to={\"/settings\"}/>;\n  }\n  else{\n    return Start();\n  }\n}\n\nfunction Start() {\n  const [state, setState] = useState<StartPageState>({\n    groups: [],\n    filterText: \"\",\n    subscribedGroupsName: []\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      const server = await Server.instance();\n      const groups = await server.groups();\n      const subscribedGroupsName = getSubscribedGroups();\n      setState({\n        ...state,\n        groups,\n        subscribedGroupsName\n      });\n\n      setLoading(false)\n    }\n\n    fetchData();\n  },\n    // doesn't work with [state]? \n    // eslint-disable-next-line\n    []);\n\n  const filter = (filterText: string) => {\n    setState({...state, filterText})\n  };\n\n  const changeSubscriptionState = (group: { title: string }) => {\n    if (isGroupSubscribed(group.title)) {\n      unsubscribeGroup(group.title);\n    } else {\n      subscribeGroup(group.title);\n    }\n    const subscribedGroupsName = getSubscribedGroups();\n    setState({...state, subscribedGroupsName})\n  };\n\n  const groupIcon = (group: Group): IconProp => {\n    if (isGroupSubscribed(group.name))\n      return \"check-square\" as IconProp;\n\n    return \"square\" as IconProp\n  };\n\n  const serverButton: Button = {\n    name: \"Settings\",\n    icon: \"tools\",\n    url: \"/settings\"\n  };\n\n  const manageButton: Button = {\n    name: \"Manage Groups\",\n    icon: \"cog\",\n    url: \"/groups-manage\"\n  };\n\n\n  const newButtons: Button[] = [serverButton, manageButton];\n\n  const isGroupFiltered = (group: Group) => {\n    const {filterText} = state;\n    if (filterText === \"\") {\n      return true;\n    }\n    return (group.name.toLowerCase().includes(filterText) || group.description.toLowerCase().includes(filterText));\n  };\n\n  const isGroupSubscribed = (groupName: string) => {\n    return state.subscribedGroupsName.includes(groupName);\n  };\n\n  const getGroups = (isSubscription?: boolean): Group[] => {\n    return state.groups.filter(group => isGroupFiltered(group) && (isSubscription !== true || isGroupSubscribed(group.name)));\n  };\n\n  const serverUrl = localStorage.getItem(\"nntpUrl\");\n  const nntpUrl = serverUrl !== null ? serverUrl : '';\n\n  return (\n    <div className=\"app-grid\">\n      <Helmet>\n        <title>newsR - {nntpUrl}</title>\n      </Helmet>\n      <Header name={nntpUrl} searchBar={{filter}} buttons={newButtons}/>\n      <div className=\"app-grid-body\">\n        {\n          loading ? <Loading/> :\n            <Switch>\n              <Route path=\"/settings\">\n              </Route>\n              <Route path=\"/groups\">\n                <List data={getGroups().map((group) => ({\n                  title: group.name,\n                  subtitle: group.description,\n                  url: `/groups/${group.name}`\n                }))}/>\n              </Route>\n              <Route path=\"/groups-manage\">\n                <div className=\"no-thread-text\">Subscribe and unsubscribe from newsgroups.</div>\n                <List data={getGroups().map((group) => ({\n                  title: group.name,\n                  subtitle: group.description,\n                  url: \"\",\n                  onPress: changeSubscriptionState,\n                  icon: groupIcon(group)\n                }))}/>\n              </Route>\n              <Route path=\"/\">\n                {state.subscribedGroupsName.length === 0\n                  ? <div className=\"no-thread\">\n                    <div className=\"no-thread-text\">\n                      Welcome to newsR - <Link to={`/groups-manage`}>Subscribe to a newsgroup</Link> to get started!\n                    </div>\n                  </div>\n                  : <List data={getGroups(true).map((group) => ({\n                    title: group.name,\n                    subtitle: group.description,\n                    url: `/groups/${group.name}`\n                  }))}/>}\n              </Route>\n            </Switch>\n        }\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\n\n\n\n","import React, {ChangeEvent, FormEvent} from \"react\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {Loading} from \"../template/Loading\";\nimport {Helmet} from \"react-helmet\";\nimport {Header} from \"../template/Header\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Footer} from \"../template/Footer\";\nimport {Server} from \"../server/Server\";\n\ninterface SettingsState {\n  loading: boolean;\n  setting: boolean;\n  done: boolean;\n  url: string,\n  port: string,\n  groupPrefix: string,\n  author: string,\n  email: string,\n  signature: string\n}\n\n//TODO: validate input\n\nclass _Settings extends React.Component<RouteComponentProps, {}> {\n\n  state: Readonly<SettingsState> = {\n    loading: true,\n    setting: false,\n    done: false,\n    author: \"\",\n    email: \"\",\n    url: \"\",\n    port: \"\",\n    groupPrefix: \"\",\n    signature: \"\"\n  };\n\n  async componentDidMount(): Promise<void> {\n\n    this.setState({\n      author: localStorage.getItem('authorName') || \"\",\n      email: localStorage.getItem('authorEmail') || \"\",\n      url: localStorage.getItem('nntpUrl') || \"news.tugraz.at\",\n      port: localStorage.getItem('nntpPort') || \"119\",\n      groupPrefix: localStorage.getItem('nntpGroupPrefix') || \"tu-graz*\",\n      signature: localStorage.getItem('signature') || '',\n      loading: false\n    });\n  }\n\n  async setServer(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    this.setState({\n      setting: true\n    });\n    const {author, email, url, port, groupPrefix, signature} = this.state;\n    if (!url || !port || !groupPrefix) {\n      console.error('Error: cannot set, please fill all fields.');\n      return;\n    }\n    if(url !== localStorage.getItem('nntpUrl')){\n      localStorage.clear();\n    }\n    localStorage.setItem('authorName', author);\n    localStorage.setItem('authorEmail', email);\n    localStorage.setItem('nntpUrl', url);\n    localStorage.setItem('nntpPort', port);\n    localStorage.setItem('nntpGroupPrefix', groupPrefix);\n    localStorage.setItem('signature', signature);\n    await Server.resetServer();\n\n    this.setState({\n      setting: false,\n      done: true\n    });\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    const {loading, setting, done, author, email, url, port, groupPrefix, signature} = this.state;\n    return (\n      <div className=\"app-grid\">\n        <Helmet>\n          <title>newsR - Settings</title>\n        </Helmet>\n        <Header name={\"Settings\"}/>\n        <div className=\"app-grid-body\">\n          {\n            loading ? <Loading/> :\n            <div className=\"settings\">\n              <form className=\"post-article\" onSubmit={(event: FormEvent<HTMLFormElement>) => this.setServer(event)}>\n                <h1 className=\"settings-group-title\">Server Details</h1>\n                <div className=\"input-group\">\n                  <label className=\"fieldLabel\" htmlFor=\"url\">Server URL:</label>\n                      <input\n                        required\n                        name=\"url\"\n                        type=\"text\"\n                        title=\"Server URL\"\n                        placeholder=\"Server URL\"\n                        value={url}\n                        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                          this.setState({\n                            url: event.currentTarget.value\n                          })\n                        }}\n                      />\n                </div>\n\n                <div className=\"input-group\">\n                  <label className=\"fieldLabel\" htmlFor=\"port\">Server Port:</label>\n                      <input\n                        required\n                        name=\"port\"\n                        type=\"text\"\n                        title=\"Server Port\"\n                        placeholder=\"Server Port\"\n                        value={port}\n                        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                          this.setState({\n                            port: event.currentTarget.value\n                          })\n                        }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <label className=\"fieldLabel\" htmlFor=\"prefix\">Group Prefix:</label>\n                      <input\n                        required\n                        name=\"prefix\"\n                        type=\"text\"\n                        title=\"Group Prefix\"\n                        placeholder=\"Group Prefix\"\n                        value={groupPrefix}\n                        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                          this.setState({\n                            groupPrefix: event.currentTarget.value\n                          })\n                        }}\n                  />\n                </div>\n                <hr/>\n                <h1 className=\"settings-group-title\">User Details</h1>\n                <div className=\"input-group\">\n                  <label className=\"fieldLabel\" htmlFor=\"name\">Full Name: </label>\n                  <input\n                    required\n                    name=\"name\"\n                    type=\"text\"\n                    title=\"Your Name\"\n                    placeholder=\"Full Name\"\n                    value={author}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        author: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <label className=\"fieldLabel\" htmlFor=\"url\">E-Mail Address:</label>\n                  <input\n                    required\n                    name=\"url\"\n                    type=\"email\"\n                    title=\"E-mail Address\"\n                    placeholder=\"E-mail Address\"\n                    value={email}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                      this.setState({\n                        email: event.currentTarget.value\n                      })\n                    }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <label className=\"fieldLabel\" htmlFor=\"signature\">Signature:</label>\n                      <textarea\n                        name=\"signature\"\n                        title=\"Signature\"\n                        placeholder=\"Your Signature...\"\n                        value={signature}\n                        onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\n                          this.setState({\n                            signature: event.currentTarget.value\n                          })\n                        }}\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <button className=\"submit\" type=\"submit\" disabled={setting}>\n                    {\n                      setting ? <FontAwesomeIcon icon=\"spinner\" spin />\n                        : (done ? \"Saved!\" : \"Save\")\n                    }\n                  </button>\n                  <button className=\"back\" type=\"reset\" onClick={() => this.props.history.goBack()}>Cancel</button>\n                </div>\n              </form>\n              </div>\n          }\n        </div>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport const Settings = withRouter(_Settings);","import React, {ReactNode} from 'react';\nimport './App.scss';\nimport {GroupDetail} from \"./group/GroupDetail\";\nimport {Route, Switch} from \"react-router-dom\"\nimport {Post} from \"./post/Post\";\nimport {StartPage} from \"./startPage/StartPage\";\nimport {Settings} from \"./settings/Settings\";\n\n\nexport default class App extends React.Component {\n  render(): ReactNode {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/groups/:name\" component={GroupDetail}/>\n          <Route path=\"/post/:name/:number?\" component={Post}/>\n          <Route path=\"/settings\" component={Settings}/>\n          <Route path=\"/\" component={StartPage}/>\n        </Switch>\n      </div>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    // websocke interception not possible with serviceWorker: https://stackoverflow.com/a/39602235/2306363\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {\n  faChevronDown,\n  faChevronRight,\n  faCog,\n  faHandPointRight,\n  faHome,\n  faList,\n  faPencilAlt,\n  faArrowLeft,\n  faSpinner,\n  faCheckSquare,\n  faSquare,\n  faTools,\n  faSort,\n  faEnvelope\n} from '@fortawesome/free-solid-svg-icons'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(faChevronDown, faChevronRight, faHandPointRight, faHome, faSpinner, faPencilAlt, faArrowLeft, faCog, faList,\n    faGithub, faCheckSquare, faSquare, faTools, faSort, faEnvelope);\nReactDOM.render(\n  <HashRouter basename={process.env.REACT_APP_BASE_URL}>\n    <App/>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8e7cbbb2.svg\";"],"sourceRoot":""}